labs(x = "",
y = "Marginal Effect") +
theme_minimal() %+replace% theme(
axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(2)),
legend.text = element_text(size = rel(1)),
legend.title = element_text(size = rel(1.5)),
legend.title.align = 0, # otherwise effect type title centre aligned for some reason
plot.background = element_rect(fill = "white", colour = "grey50"), # white background
strip.text.x = element_text(size = rel(2)),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1),
legend.spacing.x = unit(0, "cm"), # compress spacing between legend items, this is min
legend.background = element_blank(),
panel.background = element_rect(fill = "white", colour = "grey50"),
panel.grid = element_line(colour = "grey90"),
legend.key = element_blank())
read_csv("/home/simon/Documents/Si Work/PostDoc Work/Gbmauto help/2022-03_Frances_Naomi/2023-02-21 categorical variables issue/count_elasmo/Gaus_Best_line_isl_grp.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |>
dplyr::rename(Category = last_col(offset = 2)) |> # no first_col option
# alter axis titles
dplyr::mutate(Category = ordered(Category)) |>
dplyr::arrange(ycentred)
read_csv("/home/simon/Documents/Si Work/PostDoc Work/Gbmauto help/2022-03_Frances_Naomi/2023-02-21 categorical variables issue/count_elasmo/Gaus_Best_line_isl_grp.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |>
dplyr::rename(Category = last_col(offset = 2)) |> # no first_col option
# alter axis titles
dplyr::arrange(ycentred) |>
dplyr::mutate(Category = ordered(Category)) |>
ggplot() +
geom_col(aes(
x = Category,
# x = desc(Category),
y = ycentred)) +
# alter axis labels
labs(x = "",
y = "Marginal Effect") +
theme_minimal() %+replace% theme(
axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(2)),
legend.text = element_text(size = rel(1)),
legend.title = element_text(size = rel(1.5)),
legend.title.align = 0, # otherwise effect type title centre aligned for some reason
plot.background = element_rect(fill = "white", colour = "grey50"), # white background
strip.text.x = element_text(size = rel(2)),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1),
legend.spacing.x = unit(0, "cm"), # compress spacing between legend items, this is min
legend.background = element_blank(),
panel.background = element_rect(fill = "white", colour = "grey50"),
panel.grid = element_line(colour = "grey90"),
legend.key = element_blank())
read_csv("/home/simon/Documents/Si Work/PostDoc Work/Gbmauto help/2022-03_Frances_Naomi/2023-02-21 categorical variables issue/count_elasmo/Gaus_Best_line_isl_grp.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |>
dplyr::rename(Category = last_col(offset = 2)) |> # no first_col option
# alter axis titles
dplyr::arrange(ycentred) |>
dplyr::mutate(Category = ordered(Category))
tmp <- read_csv("/home/simon/Documents/Si Work/PostDoc Work/Gbmauto help/2022-03_Frances_Naomi/2023-02-21 categorical variables issue/count_elasmo/Gaus_Best_line_isl_grp.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |>
dplyr::rename(Category = last_col(offset = 2)) |> # no first_col option
# alter axis titles
dplyr::arrange(ycentred) |>
dplyr::mutate(Category = ordered(Category))
levels(tmp$Category)
tmp <- read_csv("/home/simon/Documents/Si Work/PostDoc Work/Gbmauto help/2022-03_Frances_Naomi/2023-02-21 categorical variables issue/count_elasmo/Gaus_Best_line_isl_grp.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |>
dplyr::rename(Category = last_col(offset = 2)) |> # no first_col option
# alter axis titles
dplyr::arrange(ycentred)
tmp
tmp <- read_csv("/home/simon/Documents/Si Work/PostDoc Work/Gbmauto help/2022-03_Frances_Naomi/2023-02-21 categorical variables issue/count_elasmo/Gaus_Best_line_isl_grp.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |>
dplyr::rename(Category = last_col(offset = 2)) |> # no first_col option
# alter axis titles
dplyr::arrange(ycentred) |>
dplyr::mutate(Category = ordered(Category), levels = Category)
tmp <- read_csv("/home/simon/Documents/Si Work/PostDoc Work/Gbmauto help/2022-03_Frances_Naomi/2023-02-21 categorical variables issue/count_elasmo/Gaus_Best_line_isl_grp.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |>
dplyr::rename(Category = last_col(offset = 2)) |> # no first_col option
# alter axis titles
dplyr::arrange(ycentred) |>
dplyr::mutate(Category = ordered(Category, levels = Category))
levels(tmp$Category)
# tmp <-
read_csv("/home/simon/Documents/Si Work/PostDoc Work/Gbmauto help/2022-03_Frances_Naomi/2023-02-21 categorical variables issue/count_elasmo/Gaus_Best_line_isl_grp.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |>
dplyr::rename(Category = last_col(offset = 2)) |> # no first_col option
# alter axis titles
dplyr::arrange(ycentred) |>
dplyr::mutate(Category = ordered(Category, levels = Category)) |>
ggplot() +
geom_col(aes(
x = Category,
# x = desc(Category),
y = ycentred)) +
# alter axis labels
labs(x = "",
y = "Marginal Effect") +
theme_minimal() %+replace% theme(
axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(2)),
legend.text = element_text(size = rel(1)),
legend.title = element_text(size = rel(1.5)),
legend.title.align = 0, # otherwise effect type title centre aligned for some reason
plot.background = element_rect(fill = "white", colour = "grey50"), # white background
strip.text.x = element_text(size = rel(2)),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1),
legend.spacing.x = unit(0, "cm"), # compress spacing between legend items, this is min
legend.background = element_blank(),
panel.background = element_rect(fill = "white", colour = "grey50"),
panel.grid = element_line(colour = "grey90"),
legend.key = element_blank())
?case_match
View(tmp)
# tmp <-
read_csv("/home/simon/Documents/Si Work/PostDoc Work/Gbmauto help/2022-03_Frances_Naomi/2023-02-21 categorical variables issue/count_elasmo/Gaus_Best_line_isl_grp.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |>
dplyr::rename(Category = last_col(offset = 2)) |> # no first_col option
dplyr::mutate(Category = case_match(Category,
"australis" ~ Australis)) |>
dplyr::arrange(ycentred) |>
dplyr::mutate(Category = ordered(Category, levels = Category)) |>
ggplot() +
geom_col(aes(
x = Category,
# x = desc(Category),
y = ycentred)) +
# alter axis labels
labs(x = "",
y = "Marginal Effect") +
theme_minimal() %+replace% theme(
axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(2)),
legend.text = element_text(size = rel(1)),
legend.title = element_text(size = rel(1.5)),
legend.title.align = 0, # otherwise effect type title centre aligned for some reason
plot.background = element_rect(fill = "white", colour = "grey50"), # white background
strip.text.x = element_text(size = rel(2)),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1),
legend.spacing.x = unit(0, "cm"), # compress spacing between legend items, this is min
legend.background = element_blank(),
panel.background = element_rect(fill = "white", colour = "grey50"),
panel.grid = element_line(colour = "grey90"),
legend.key = element_blank())
# tmp <-
read_csv("/home/simon/Documents/Si Work/PostDoc Work/Gbmauto help/2022-03_Frances_Naomi/2023-02-21 categorical variables issue/count_elasmo/Gaus_Best_line_isl_grp.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |>
dplyr::rename(Category = last_col(offset = 2)) |> # no first_col option
dplyr::mutate(Category = case_match(Category,
"australis" ~ "Australis")) |>
dplyr::arrange(ycentred) |>
dplyr::mutate(Category = ordered(Category, levels = Category)) |>
ggplot() +
geom_col(aes(
x = Category,
# x = desc(Category),
y = ycentred)) +
# alter axis labels
labs(x = "",
y = "Marginal Effect") +
theme_minimal() %+replace% theme(
axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(2)),
legend.text = element_text(size = rel(1)),
legend.title = element_text(size = rel(1.5)),
legend.title.align = 0, # otherwise effect type title centre aligned for some reason
plot.background = element_rect(fill = "white", colour = "grey50"), # white background
strip.text.x = element_text(size = rel(2)),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1),
legend.spacing.x = unit(0, "cm"), # compress spacing between legend items, this is min
legend.background = element_blank(),
panel.background = element_rect(fill = "white", colour = "grey50"),
panel.grid = element_line(colour = "grey90"),
legend.key = element_blank())
# tmp <-
read_csv("/home/simon/Documents/Si Work/PostDoc Work/Gbmauto help/2022-03_Frances_Naomi/2023-02-21 categorical variables issue/count_elasmo/Gaus_Best_line_isl_grp.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |>
dplyr::rename(Category = last_col(offset = 2)) |> # no first_col option
dplyr::mutate(Category = case_match(Category,
"australis" ~ "Australis",
.default = Category)) |>
dplyr::arrange(ycentred) |>
dplyr::mutate(Category = ordered(Category, levels = Category)) |>
ggplot() +
geom_col(aes(
x = Category,
# x = desc(Category),
y = ycentred)) +
# alter axis labels
labs(x = "",
y = "Marginal Effect") +
theme_minimal() %+replace% theme(
axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(2)),
legend.text = element_text(size = rel(1)),
legend.title = element_text(size = rel(1.5)),
legend.title.align = 0, # otherwise effect type title centre aligned for some reason
plot.background = element_rect(fill = "white", colour = "grey50"), # white background
strip.text.x = element_text(size = rel(2)),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1),
legend.spacing.x = unit(0, "cm"), # compress spacing between legend items, this is min
legend.background = element_blank(),
panel.background = element_rect(fill = "white", colour = "grey50"),
panel.grid = element_line(colour = "grey90"),
legend.key = element_blank())
# tmp <-
read_csv("/home/simon/Documents/Si Work/PostDoc Work/Gbmauto help/2022-03_Frances_Naomi/2023-02-21 categorical variables issue/count_elasmo/Gaus_Best_line_isl_grp.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |>
dplyr::rename(Category = last_col(offset = 2)) |> # no first_col option
dplyr::mutate(Category = case_match(Category,
"australes" ~ "Australes",
.default = Category)) |>
dplyr::arrange(ycentred) |>
dplyr::mutate(Category = ordered(Category, levels = Category)) |>
ggplot() +
geom_col(aes(
x = Category,
# x = desc(Category),
y = ycentred)) +
# alter axis labels
labs(x = "",
y = "Marginal Effect") +
theme_minimal() %+replace% theme(
axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(2)),
legend.text = element_text(size = rel(1)),
legend.title = element_text(size = rel(1.5)),
legend.title.align = 0, # otherwise effect type title centre aligned for some reason
plot.background = element_rect(fill = "white", colour = "grey50"), # white background
strip.text.x = element_text(size = rel(2)),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1),
legend.spacing.x = unit(0, "cm"), # compress spacing between legend items, this is min
legend.background = element_blank(),
panel.background = element_rect(fill = "white", colour = "grey50"),
panel.grid = element_line(colour = "grey90"),
legend.key = element_blank())
document()
devtools::document()
gbm.step
library(dismo)
devtools::document()
gbm.step
?gbm.interactions
?dismo::gbm.interactions
devtools::document()
library(devtools)
document()
?lm
?plot
?mtext
?abline
devtools::document()
document()
devtools::document()
source("~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.basemap.R")
devtools:document()
devtools::document()
document()
library(devtools)
document()
build()
library(gbm.auto)
remotes::install_github("SimonDedman/gbm.auto")
document()
devtools::document()
devtools::build()
devtools::document()
devtools::build()
?use_package
??use_package
usethis::use_package(dismo, type = "Depends")
library(dismo)
usethis::use_package(dismo, type = "Depends")
usethis::use_package("dismo", type = "Depends")
document()
devtools::document()
devtools::build()
devtools::document()
devtools::build()
styler:::style_active_file()
?read_csv
??read_csv
NEW_PDP_PLOT <- readr::read_csv("/home/simon/Documents/Si Work/PostDoc Work/Saving The Blue/Projects/2021-10_Drumline_Reefshark/BRT/CPUE_Loops/1/CaribbeanReef_CPUE/Gaus_Best_line_Habitat.csv")
View(NEW_PDP_PLOT)
NEW_PDP_PLOT <- readr::read_csv("/home/simon/Documents/Si Work/PostDoc Work/Saving The Blue/Projects/2021-10_Drumline_Reefshark/BRT/CPUE_Loops/1/CaribbeanReef_CPUE/Gaus_Best_line_Habitat.csv") %>%
dplyr::mutate(ycentred = y - mean(y)) %>%
dplyr::rename(Category = last_col(offset = 2))
NEW_PDP_PLOT <- readr::read_csv("/home/simon/Documents/Si Work/PostDoc Work/Saving The Blue/Projects/2021-10_Drumline_Reefshark/BRT/CPUE_Loops/1/CaribbeanReef_CPUE/Gaus_Best_line_Habitat.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |>
dplyr::rename(Category = last_col(offset = 2))
NEW_PDP_PLOT <- readr::read_csv("/home/simon/Documents/Si Work/PostDoc Work/Saving The Blue/Projects/2021-10_Drumline_Reefshark/BRT/CPUE_Loops/1/CaribbeanReef_CPUE/Gaus_Best_line_Habitat.csv")
NEW_PDP_PLOT <- readr::read_csv("/home/simon/Documents/Si Work/PostDoc Work/Saving The Blue/Projects/2021-10_Drumline_Reefshark/BRT/CPUE_Loops/1/CaribbeanReef_CPUE/Gaus_Best_line_Habitat.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |> # centre y conforming to plot.gbm format
dplyr::rename(Category = last_col(offset = 2)) |> # Rename first column to a generic name. No first_col option
# dplyr::case_match(Category,
#                   "OLD NAME 1" ~ "NEW NAME 1",
#                   "OLD NAME 2" ~ "NEW NAME 2",
#                   "OLD NAME 3" ~ "NEW NAME 3",
#                   .default = Category) |>
# make category an ordered factor. Default alphabetical, can change as desired.
dplyr::mutate(Category = ordered(Category, levels = Category)) |>
# re-order the x axis for categorical variables so they're in order from high to low or can add factor levels
dplyr::arrange(ycentred) |>
ggplot() +
geom_col(aes(x = Category,
y = ycentred)) +
labs(x = "",
y = "Marginal Effect") +
theme_pubclean(base_size = 16) +
scale_x_discrete(guide = guide_axis(angle = 45))
NEW_PDP_PLOT <- readr::read_csv("/home/simon/Documents/Si Work/PostDoc Work/Saving The Blue/Projects/2021-10_Drumline_Reefshark/BRT/CPUE_Loops/1/CaribbeanReef_CPUE/Gaus_Best_line_Habitat.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |> # centre y conforming to plot.gbm format
dplyr::rename(Category = last_col(offset = 2)) |> # Rename first column to a generic name. No first_col option
# dplyr::case_match(Category,
#                   "OLD NAME 1" ~ "NEW NAME 1",
#                   "OLD NAME 2" ~ "NEW NAME 2",
#                   "OLD NAME 3" ~ "NEW NAME 3",
#                   .default = Category) |>
# make category an ordered factor. Default alphabetical, can change as desired.
dplyr::mutate(Category = ordered(Category, levels = Category)) |>
# re-order the x axis for categorical variables so they're in order from high to low or can add factor levels
dplyr::arrange(ycentred) |>
ggplot2::ggplot() +
ggplot2::geom_col(aes(x = Category,
y = ycentred)) +
ggplot2::labs(x = "",
y = "Marginal Effect") +
ggplot2::theme_pubclean(base_size = 16) +
ggplot2::scale_x_discrete(guide = guide_axis(angle = 45))
NEW_PDP_PLOT <- readr::read_csv("/home/simon/Documents/Si Work/PostDoc Work/Saving The Blue/Projects/2021-10_Drumline_Reefshark/BRT/CPUE_Loops/1/CaribbeanReef_CPUE/Gaus_Best_line_Habitat.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |> # centre y conforming to plot.gbm format
dplyr::rename(Category = last_col(offset = 2)) |> # Rename first column to a generic name. No first_col option
# dplyr::case_match(Category,
#                   "OLD NAME 1" ~ "NEW NAME 1",
#                   "OLD NAME 2" ~ "NEW NAME 2",
#                   "OLD NAME 3" ~ "NEW NAME 3",
#                   .default = Category) |>
# make category an ordered factor. Default alphabetical, can change as desired.
dplyr::mutate(Category = ordered(Category, levels = Category)) |>
# re-order the x axis for categorical variables so they're in order from high to low or can add factor levels
dplyr::arrange(ycentred) |>
ggplot2::ggplot() +
ggplot2::geom_col(ggplot2::aes(x = Category,
y = ycentred)) +
ggplot2::labs(x = "",
y = "Marginal Effect") +
ggplot2::theme_pubclean(base_size = 16) +
ggplot2::scale_x_discrete(guide = guide_axis(angle = 45))
??theme_pubclean
NEW_PDP_PLOT <- readr::read_csv("/home/simon/Documents/Si Work/PostDoc Work/Saving The Blue/Projects/2021-10_Drumline_Reefshark/BRT/CPUE_Loops/1/CaribbeanReef_CPUE/Gaus_Best_line_Habitat.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |> # centre y conforming to plot.gbm format
dplyr::rename(Category = last_col(offset = 2)) |> # Rename first column to a generic name. No first_col option
# dplyr::case_match(Category,
#                   "OLD NAME 1" ~ "NEW NAME 1",
#                   "OLD NAME 2" ~ "NEW NAME 2",
#                   "OLD NAME 3" ~ "NEW NAME 3",
#                   .default = Category) |>
# make category an ordered factor. Default alphabetical, can change as desired.
dplyr::mutate(Category = ordered(Category, levels = Category)) |>
# re-order the x axis for categorical variables so they're in order from high to low or can add factor levels
dplyr::arrange(ycentred) |>
ggplot2::ggplot() +
ggplot2::geom_col(ggplot2::aes(x = Category,
y = ycentred)) +
ggplot2::labs(x = "",
y = "Marginal Effect") +
ggpubr::theme_pubclean(base_size = 16) +
ggplot2::scale_x_discrete(guide = guide_axis(angle = 45))
NEW_PDP_PLOT <- readr::read_csv("/home/simon/Documents/Si Work/PostDoc Work/Saving The Blue/Projects/2021-10_Drumline_Reefshark/BRT/CPUE_Loops/1/CaribbeanReef_CPUE/Gaus_Best_line_Habitat.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |> # centre y conforming to plot.gbm format
dplyr::rename(Category = last_col(offset = 2)) |> # Rename first column to a generic name. No first_col option
# dplyr::case_match(Category,
#                   "OLD NAME 1" ~ "NEW NAME 1",
#                   "OLD NAME 2" ~ "NEW NAME 2",
#                   "OLD NAME 3" ~ "NEW NAME 3",
#                   .default = Category) |>
# make category an ordered factor. Default alphabetical, can change as desired.
dplyr::mutate(Category = ordered(Category, levels = Category)) |>
# re-order the x axis for categorical variables so they're in order from high to low or can add factor levels
dplyr::arrange(ycentred) |>
ggplot2::ggplot() +
ggplot2::geom_col(ggplot2::aes(x = Category,
y = ycentred)) +
ggplot2::labs(x = "",
y = "Marginal Effect") +
ggpubr::theme_pubclean(base_size = 16) +
ggplot2::scale_x_discrete(guide = ggplot2::guide_axis(angle = 45))
NEW_PDP_PLOT
options(scipen = 5)
NEW_PDP_PLOT <- readr::read_csv("/home/simon/Documents/Si Work/PostDoc Work/Saving The Blue/Projects/2021-10_Drumline_Reefshark/BRT/CPUE_Loops/1/CaribbeanReef_CPUE/Gaus_Best_line_Habitat.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |> # centre y conforming to plot.gbm format
dplyr::rename(Category = last_col(offset = 2)) |> # Rename first column to a generic name. No first_col option
# dplyr::case_match(Category,
#                   "OLD NAME 1" ~ "NEW NAME 1",
#                   "OLD NAME 2" ~ "NEW NAME 2",
#                   "OLD NAME 3" ~ "NEW NAME 3",
#                   .default = Category) |>
# make category an ordered factor. Default alphabetical, can change as desired.
dplyr::mutate(Category = ordered(Category, levels = Category)) |>
# re-order the x axis for categorical variables so they're in order from high to low or can add factor levels
dplyr::arrange(ycentred) |>
ggplot2::ggplot() +
ggplot2::geom_col(ggplot2::aes(x = Category,
y = ycentred)) +
ggplot2::labs(x = "",
y = "Marginal Effect") +
ggpubr::theme_pubclean(base_size = 16) +
ggplot2::scale_x_discrete(guide = ggplot2::guide_axis(angle = 45))
NEW_PDP_PLOT
View(NEW_PDP_PLOT)
NEW_PDP_PLOT <- readr::read_csv("/home/simon/Documents/Si Work/PostDoc Work/Saving The Blue/Projects/2021-10_Drumline_Reefshark/BRT/CPUE_Loops/1/CaribbeanReef_CPUE/Gaus_Best_line_Habitat.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |> # centre y conforming to plot.gbm format
dplyr::rename(Category = last_col(offset = 2)) |> # Rename first column to a generic name. No first_col option
# dplyr::case_match(Category,
#                   "OLD NAME 1" ~ "NEW NAME 1",
#                   "OLD NAME 2" ~ "NEW NAME 2",
#                   "OLD NAME 3" ~ "NEW NAME 3",
#                   .default = Category) |>
# make category an ordered factor. Default alphabetical, can change as desired.
dplyr::mutate(Category = ordered(Category, levels = Category)) |>
# re-order the x axis for categorical variables so they're in order from high to low or can add factor levels
dplyr::arrange(ycentred)
readr::read_csv("/home/simon/Documents/Si Work/PostDoc Work/Saving The Blue/Projects/2021-10_Drumline_Reefshark/BRT/CPUE_Loops/1/CaribbeanReef_CPUE/Gaus_Best_line_Habitat.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |> # centre y conforming to plot.gbm format
dplyr::rename(Category = last_col(offset = 2)) |> # Rename first column to a generic name. No first_col option
# dplyr::case_match(Category, # uncomment this to change the category values to new names if desired.
#                   "OLD NAME 1" ~ "NEW NAME 1",
#                   "OLD NAME 2" ~ "NEW NAME 2",
#                   "OLD NAME 3" ~ "NEW NAME 3",
#                   .default = Category) |>
# make category an ordered factor. Default alphabetical, can change as desired.
dplyr::mutate(Category = ordered(Category, levels = Category)) |>
# re-order the x axis for categorical variables so they're in order from high to low or can add factor levels
dplyr::arrange(ycentred) |>
ggplot2::ggplot() +
ggplot2::geom_col(ggplot2::aes(x = Category,
y = ycentred)) +
ggplot2::labs(x = "",
y = "Marginal Effect") +
ggpubr::theme_pubclean(base_size = 16) +
ggplot2::scale_x_discrete(guide = ggplot2::guide_axis(angle = 45))
# library(viridis)
install.packages("ungeviz")
# library(viridis)
remotes::install_github("wilkelab/ungeviz")
library(ungeviz)
readr::read_csv("/home/simon/Documents/Si Work/PostDoc Work/Saving The Blue/Projects/2021-10_Drumline_Reefshark/BRT/CPUE_Loops/1/CaribbeanReef_CPUE/Gaus_Best_line_Habitat.csv") |>
dplyr::mutate(ycentred = y - mean(y)) |> # centre y conforming to plot.gbm format
dplyr::rename(Category = last_col(offset = 2)) |> # Rename first column to a generic name. No first_col option
# dplyr::case_match(Category, # uncomment this to change the category values to new names if desired.
#                   "OLD NAME 1" ~ "NEW NAME 1",
#                   "OLD NAME 2" ~ "NEW NAME 2",
#                   "OLD NAME 3" ~ "NEW NAME 3",
#                   .default = Category) |>
# make category an ordered factor. Default alphabetical, can change as desired.
dplyr::mutate(Category = ordered(Category, levels = Category)) |>
# re-order the x axis for categorical variables so they're in order from high to low or can add factor levels
dplyr::arrange(ycentred) |>
ggplot2::ggplot(ggplot2::aes(x = Category,
y = ycentred)) +
ungeviz::geom_hpline() +
# ggplot2::geom_col() +
ggplot2::labs(x = "",
y = "Marginal Effect") +
ggpubr::theme_pubclean(base_size = 16) +
ggplot2::scale_x_discrete(guide = ggplot2::guide_axis(angle = 45))
library(lubridate)
?last_plot
saveloc = "/home/simon/Documents/Si Work/PostDoc Work/Saving The Blue/Projects/2021-10_Drumline_Reefshark/BRT/CPUE_Loops/1/CaribbeanReef_CPUE/"
savename = stri_replace(str = readfile,
".csv",
".png")
?stri_replace
savename = stringi::stri_replace(str = readfile,
".csv",
".png")
savename = stringi::stri_replace_all(str = readfile,
".csv",
".png")
savename = stringi::stri_replace_all_fixed(str = readfile,
".csv",
".png")
readloc = "/home/simon/Documents/Si Work/PostDoc Work/Saving The Blue/Projects/2021-10_Drumline_Reefshark/BRT/CPUE_Loops/1/CaribbeanReef_CPUE/"
readfile = "Gaus_Best_line_Habitat.csv"
saveloc = "/home/simon/Documents/Si Work/PostDoc Work/Saving The Blue/Projects/2021-10_Drumline_Reefshark/BRT/CPUE_Loops/1/CaribbeanReef_CPUE/"
savename = stringi::stri_replace_all_fixed(str = readfile,
".csv",
".png")
savename
readr::read_csv(paste0(readloc, readfile)) |>
dplyr::mutate(ycentred = y - mean(y)) |> # centre y conforming to plot.gbm format
dplyr::rename(Category = last_col(offset = 2)) |> # Rename first column to a generic name. No first_col option
# dplyr::case_match(Category, # uncomment this to change the category values to new names if desired.
#                   "OLD NAME 1" ~ "NEW NAME 1",
#                   "OLD NAME 2" ~ "NEW NAME 2",
#                   "OLD NAME 3" ~ "NEW NAME 3",
#                   .default = Category) |>
# make category an ordered factor. Default alphabetical, can change as desired.
dplyr::mutate(Category = ordered(Category, levels = Category)) |>
# re-order the x axis for categorical variables so they're in order from high to low or can add factor levels
dplyr::arrange(ycentred) |>
ggplot2::ggplot(ggplot2::aes(x = Category,
y = ycentred)) +
ungeviz::geom_hpline() +
ggplot2::labs(x = "",
y = "Marginal Effect") +
ggpubr::theme_pubclean(base_size = 16) +
ggplot2::scale_x_discrete(guide = ggplot2::guide_axis(angle = 45))
ggplot2::ggsave(paste0(saveloc, lubridate::today(), "_", savename),
plot = ggplot2::last_plot(), device = "png", scale = 1.75, width = 7,
height = 4, units = "in", dpi = 300, limitsize = TRUE)
devtools::document()
devtools::build()
