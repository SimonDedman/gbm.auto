assign(paste("agg_", i, sep = ""),
aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
)
}
# make blank df for each year
yearmax <- data.frame(years, maxval = rep(NA, length(years)))
# get max of each yearly object's aggregated CPUE
for (i in 1:length(years)) {
yearmax[i,2] <- max(get(paste("agg_", years[i], sep = ""))$z)
}
max(yearmax[,2]) # 2131
View(yearmax)
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = paste("ICES IBTS Ray catches, ", i, sep = ""))
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
par(mfrow = c(5,5)) # set matrix
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = paste("ICES IBTS Ray catches, ", i, sep = ""))
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
par(mfrow = c(4,6)) # set matrix
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
par(mfrow = c(6,4)) # set matrix
# par(mar = c(2.3, 2.2, 1.5, 0), # margin space buffer around plot
#     oma = c(1.5, 1.5, 0.5, 0.5),
#     mgp = c(1.4, 0.5, 0)) # dist of lat/long labels,markers,line from axis
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
par(mfrow = c(4,6)) # set matrix
# par(mar = c(2.3, 2.2, 1.5, 0), # margin space buffer around plot
#     oma = c(1.5, 1.5, 0.5, 0.5),
#     mgp = c(1.4, 0.5, 0)) # dist of lat/long labels,markers,line from axis
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
par(mfrow = c(6,4)) # set matrix
# par(mar = c(2.3, 2.2, 1.5, 0), # margin space buffer around plot
#     oma = c(1.5, 1.5, 0.5, 0.5),
#     mgp = c(1.4, 0.5, 0)) # dist of lat/long labels,markers,line from axis
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
par(mar = c(2.3, 2.2, 1.5, 0), # margin space buffer around plot
oma = c(1.5, 1.5, 0.5, 0.5),
mgp = c(1.4, 0.5, 0),
xaxt = "n",
yaxt = "n") # dist of lat/long labels,markers,line from axis
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
par(mfrow = c(6,4)) # set matrix
par(mar = c(2.3, 2.2, 1.5, 0), # margin space buffer around plot
oma = c(1.5, 1.5, 0.5, 0.5),
mgp = c(1.4, 0.5, 0),
xaxt = "n",
yaxt = "n") # dist of lat/long labels,markers,line from axis
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
axis(1)
axis(2)
par(mfrow = c(6,4)) # set matrix
par(mar = c(2.3, 2.2, 1.5, 0), # margin space buffer around plot
oma = c(1.5, 1.5, 0.5, 0.5),
mgp = c(1.4, 0.5, 0),
xaxt = "n",
yaxt = "n") # dist of lat/long labels,markers,line from axis
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
basemap(xlim3, ylim3, main = "", xlab = "", ylab = "", bg = "white")
legend.bubble("center", z = 2131, maxradius = 0.5, inset = 0.02,
bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
par(mfrow = c(6,4)) # set matrix
par(mar = c(0.5, 0.5, 0.5, 0), # margin space buffer around plot
oma = c(0.5, 0.5, 0.5, 0.5),
mgp = c(0.5, 0.5, 0),
xaxt = "n",
yaxt = "n") # dist of lat/long labels,markers,line from axis
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
basemap(xlim3, ylim3, main = "", xlab = "", ylab = "", bg = "white")
legend.bubble("center", z = 2131, maxradius = 0.5, inset = 0.02,
bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 3)
par(mfrow = c(6,4)) # set matrix
par(mar = c(0, 0, 1, 0), # margin space buffer around plot
oma = c(0, 0, 0, 0),
mgp = c(0, 0, 0),
xaxt = "n",
yaxt = "n") # dist of lat/long labels,markers,line from axis
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
basemap(xlim3, ylim3, main = "", xlab = "", ylab = "", bg = "white")
legend.bubble("center", z = 2131, maxradius = 0.5, inset = 0.02,
bg = "lightblue", txt.cex = 0.6, pch = 21, pt.bg = "#00FF0050",
n = 3, mab = 0.5)
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
basemap(xlim3, ylim3, main = "", xlab = "", ylab = "", bg = "white")
legend.bubble("center", z = 2131, maxradius = 0.5, inset = 0.02,
bg = "lightblue", txt.cex = 0.6, pch = 21, pt.bg = "#00FF0050",
n = 3)
legend("center", legend = c(25, 100, 500, 1000, 2131), fill = "#00FF0050", pch = 21, bg = "lightblue")
legend("center", legend = c(25, 100, 500, 1000, 2131), fill = "#00FF0050", pch = 21, bg = "lightblue", pt.cex = c(25, 100, 500, 1000, 2131))
legend("center", legend = c(25, 100, 500, 1000, 2131), fill = "#00FF0050", pch = 21, bg = "lightblue", pt.cex = c(25/25, 100/25, 500/25, 1000/25, 2131/25))
legend("center", legend = c(25, 100, 500, 1000, 2131), fill = "#00FF0050", pch = 21, bg = "lightblue", pt.cex = c(25/250, 100/250, 500/250, 1000/250, 2131/250))
legend("center", legend = c(25, 100, 500, 1000, 2131), fill = "#00FF0050", pch = 21, bg = "lightblue", pt.cex = c(25/275, 100/275, 500/275, 1000/275, 2131/275))
par(mfrow = c(6,4)) # set matrix
par(mar = c(0, 0, 1, 0), # margin space buffer around plot
oma = c(0, 0, 0, 0),
mgp = c(0, 0, 0),
xaxt = "n",
yaxt = "n") # dist of lat/long labels,markers,line from axis
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
basemap(xlim3, ylim3, main = "", xlab = "", ylab = "", bg = "white")
legend("center", legend = c(25, 100, 500, 1000, 2131), fill = "#00FF0050",
pch = 21, bg = "lightblue", y.intersp = 10,
pt.cex = c(25/275, 100/275, 500/275, 1000/275, 2131/275))
legend("center", legend = c(25, 100, 500, 1000, 2131), fill = "#00FF0050",
pch = 21, bg = "lightblue",
pt.cex = c(25/275, 100/275, 500/275, 1000/275, 2131/275))
par(mfrow = c(6,4)) # set matrix
par(mar = c(0, 0, 1, 0), # margin space buffer around plot
oma = c(0, 0, 0, 0),
mgp = c(0, 0, 0),
xaxt = "n",
yaxt = "n") # dist of lat/long labels,markers,line from axis
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
basemap(xlim3, ylim3, main = "", xlab = "", ylab = "", bg = "white")
legend("center", legend = c(25, 100, 500, 1000, 2131), fill = "#00FF0050",
pch = 21, bg = "lightblue",
pt.cex = c(25/350, 100/350, 500/350, 1000/350, 2131/350))
par(mfrow = c(6,4)) # set matrix
par(mar = c(0, 0, 1, 0), # margin space buffer around plot
oma = c(0, 0, 0, 0),
mgp = c(0, 0, 0),
xaxt = "n",
yaxt = "n") # dist of lat/long labels,markers,line from axis
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
basemap(xlim3, ylim3, main = "", xlab = "", ylab = "", bg = "white")
legend("center", legend = c(25, 100, 500, 1000, 2131), pch = 21, col = "#00FF0050",
bg = "lightblue",
pt.cex = c(25/350, 100/350, 500/350, 1000/350, 2131/350))
par(mfrow = c(6,4)) # set matrix
par(mar = c(0, 0, 1, 0), # margin space buffer around plot
oma = c(0, 0, 0, 0),
mgp = c(0, 0, 0),
xaxt = "n",
yaxt = "n") # dist of lat/long labels,markers,line from axis
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
basemap(xlim3, ylim3, main = "", xlab = "", ylab = "", bg = "white")
legend("center", legend = c(25, 100, 500, 1000, 2131), pch = 21, col = "black", pt.bg = "#00FF0050",
bg = "lightblue",
pt.cex = c(25/350, 100/350, 500/350, 1000/350, 2131/350))
par(mfrow = c(6,4)) # set matrix
par(mar = c(0, 0, 1, 0), # margin space buffer around plot
oma = c(0, 0, 0, 0),
mgp = c(0, 0, 0),
xaxt = "n",
yaxt = "n") # dist of lat/long labels,markers,line from axis
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
basemap(xlim3, ylim3, main = "", xlab = "", ylab = "", bg = "white")
legend("center", legend = c(100, 500, 1000, 2131), pch = 21, col = "black", pt.bg = "#00FF0050",
bg = "lightblue",
pt.cex = c(100/300, 500/300, 1000/300, 2131/300))
par(mfrow = c(6,4)) # set matrix
par(mar = c(0, 0, 1, 0), # margin space buffer around plot
oma = c(0, 0, 0, 0),
mgp = c(0, 0, 0),
xaxt = "n",
yaxt = "n") # dist of lat/long labels,markers,line from axis
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
basemap(xlim3, ylim3, main = "", xlab = "", ylab = "", bg = "white")
legend("center", legend = c(100, 500, 1000, 2131), pch = 21, col = "black", pt.bg = "#00FF0050",
bg = "lightblue", y.intersp = 2,
pt.cex = c(100/325, 500/325, 1000/325, 2131/325))
par(mfrow = c(6,4)) # set matrix
par(mar = c(0, 0, 1, 0), # margin space buffer around plot
oma = c(0, 0, 0, 0),
mgp = c(0, 0, 0),
xaxt = "n",
yaxt = "n") # dist of lat/long labels,markers,line from axis
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
basemap(xlim3, ylim3, main = "", xlab = "", ylab = "", bg = "lightblue")
legend("center", legend = c(100, 500, 1000, 2131), pch = 21, col = "black", pt.bg = "#00FF0050",
bg = "lightblue", y.intersp = 2, bty = "n",
pt.cex = c(100/325, 500/325, 1000/325, 2131/325))
par(mfrow = c(6,4)) # set matrix
par(mar = c(0, 0, 1, 0), # margin space buffer around plot
oma = c(0, 0, 0, 0),
mgp = c(0, 0, 0),
xaxt = "n",
yaxt = "n") # dist of lat/long labels,markers,line from axis
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
basemap(xlim3, ylim3, main = "", xlab = "", ylab = "", bg = "lightblue")
legend("center", legend = c(100, 500, 1000, 2131), pch = 21, col = "black", pt.bg = "#00FF0050",
bg = "lightblue", y.intersp = 2, x.intersp = 2, bty = "n",
pt.cex = c(100/325, 500/325, 1000/325, 2131/325))
par(mfrow = c(6,4)) # set matrix
par(mar = c(0, 0, 1, 0), # margin space buffer around plot
oma = c(0, 0, 0, 0),
mgp = c(0, 0, 0),
xaxt = "n",
yaxt = "n") # dist of lat/long labels,markers,line from axis
for (i in years) {
forCPUE <- CPUE2[CPUE2$Year == i,]
agg3 <- aggregate(list(z = forCPUE$TotalNo),
list(x = forCPUE$Midpoint.Lon, y = forCPUE$Midpoint.Lat), sum)
basemap(xlim3, ylim3, main = i, xlab = "", ylab = "")
draw.shape(coast, col = "cornsilk")
# zeroes and maxyearmax added to put the max value offscreen to bind max values for scaling
draw.bubble(c(agg3$x,0), c(agg3$y,0), c(agg3$z, 2131), maxradius = 0.5, pch = 21, bg = "#00FF0050")
#legend.z2 <- round(max(agg3$z, na.rm = TRUE)/1,0) # tweak divisor for size
#legend.bubble("bottomright", z = legend.z2, maxradius = 0.5, inset = 0.02,
#              bg = "lightblue", txt.cex = 0.8, pch = 21, pt.bg = "#00FF0050", n = 8)
}
basemap(xlim3, ylim3, main = "", xlab = "", ylab = "", bg = "lightblue")
legend("center", legend = c(100, 500, 1000, 2131), pch = 21, col = "black", pt.bg = "#00FF0050",
bg = "lightblue", y.intersp = 2.1, x.intersp = 2, bty = "n",
pt.cex = c(100/325, 500/325, 1000/325, 2131/325))
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
mygrids <- gbm.auto::grids
view(mygrids)[,c(8,43)]
View(mygrids)[,c(8,43)]
View(mygrids[,c(8,43)])
samples <- gbm.auto::Juveniles
library("dismo", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
gbm.step
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
library("gbm.auto")
library("mapplots", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
mysamples <- gbm.auto::samples
mygrids <- gbm.auto::grids
library(mapplots)
data(coast)
shape = coast
getwd()
setwd("/home/simon/Desktop/gbm temp/")
getwd()
gbm.auto(expvar = c(4:7, 9, 11), resvar = 12, grids = mygrids,
samples = mysamples, lr = c(0.005), ZI = TRUE, savegbm = FALSE,
mapshape = coast)
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
detach("package:gbm.auto", unload=TRUE)
install_github("SimonDedman/gbm.auto")
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
install.packages(c("curl", "digest", "git2r", "jsonlite", "knitr", "leaflet", "maptools", "openssl", "Rcpp", "rmarkdown", "roxygen2", "R.utils", "shiny", "stringr", "yaml"))
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
getwd()
gbm.auto(expvar = c(4:7, 9, 11), resvar = 12, grids = mygrids,
samples = mysamples, lr = c(0.005), ZI = TRUE, savegbm = FALSE,
shape = coast)
colnames(mysamples)[c(4:7, 9, 11)]
colnames(mysamples)[12]
gbm.auto(expvar = c(4:10), resvar = 11, grids = mygrids,
samples = mysamples, lr = c(0.005), ZI = TRUE, savegbm = FALSE,
shape = coast)
cv.loss.matrix <- matrix(0, nrow = 10, ncol = 1)
View(cv.loss.matrix)
model.list <- list(paste("model", 1:10, sep = ""))
model.chr <- paste("model", 1:10, sep = "")
mydata <-  <- gbm.auto::AllPreds_E
mydata <- gbm.auto::AllPreds_E
conserve <- gbm.auto::AllScaledData
paste("hi jon ", 10)
paste("hi jon", 10)
paste0("hi jon", 10)
cores<-detectCores(all.tests = FALSE, logical = FALSE)
cores
cores<-detectCores(all.tests = FALSE, logical = TRUE)
cores
abs(-100)
abs(c(-100,-1,1,100)
abs(c(-100,-1,1,100))
abs(c(-100,-1,1,100))
1.5^693
1.5**693
sapply(c(1:10), sqrt)
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
install_github("SimonDedman/gbm.auto")
document()
document()
document()
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
install_github("SimonDedman/gbm.auto")
document()
document()
mygrids <- gbm.auto::grids  # load grids
mysamples <- gbm.auto::samples  # load samples
Juveniles <- gbm.auto::Juveniles # load juveniles subset
Adult_Females <- gbm.auto::Adult_Females
colnames(Juveniles)[43:44]
colnames(Adult_Females)[10:11]
colnames(Juveniles)[c(4:10,14,16,20,24,28,36)]
colnames(Juveniles)[c(4:10,14,17,21,25,29,37)]
colnames(Adult_Females)[4:9]
document()
