library(reshape2)
library(doBy)
library(plyr)
library(dplyr)
library(missForest)
library(suncalc)
library(devtools)
library(gbm.auto)
disl$Season <- factor(disl$Season,
levels = c("Winter", "Spring", "Summer", "Fall"),
ordered = TRUE)
# Depth Bin: factor 3 levels reorder 'deep mid shallow' to 's m d'
disl$Depth.Bin <- factor(disl$Depth.Bin,
levels = c("Shallow", "Mid", "Deep"),
ordered = TRUE)
#Fix cuban.dogfish Female was coded instead of F
disl <- rename(disl, F.Cuban.dogfish = Female.Cuban.dogfish)
## make sure the non-numeric are treated correctly
char.ids <- unlist(lapply(disl,is.character))
disl[,char.ids] <- lapply(disl[,char.ids],as.factor)
#Impute missing values with random forest
missF <- missForest(disl[,6:11])
missFimp <- missF$ximp
disl2 <- cbind(disl[,1:5], missFimp[,1:6])
## Generate daylength
# acquire date from station.id
datevec <- paste0(paste0(20, substr(disl2$Station.ID, 7, 8)), "-",
substr(disl2$Station.ID, 3, 4), "-",
substr(disl2$Station.ID, 5, 6))
class(datevec) #character
datevec <- as.Date(datevec) # change to date format
class(datevec) #date
# get sunrise & sunset times for those latlons & dates
sundata <- data.frame(date = datevec,
lat = disl2$Lat,
lon = disl2$Lon)
sunriseset <- getSunlightTimes(data = sundata,
keep = c("sunrise", "sunset"),
tz = "America/Chicago")
#calc day length: sunset minus sunrise
daylength <- sunriseset$sunset - sunriseset$sunrise
class(daylength) #difftime
daylength <- as.numeric(daylength) #change to numeric format
class(daylength) #numeric
disl2 <- cbind(disl2, daylength) #add to dataframe
#update original disl with fixed/edited & new values
disl3 <- cbind(disl2, disl[,12:42])
#make bin values
disl_tmp <- as.matrix(disl3[,13:43])
disl3bin <- data.frame(ifelse(disl_tmp > 0, 1, disl_tmp))
##Long format====
##Sex-as-factors df
#Convert from wide to long
dislL <- melt(disl3, id = c("Year", "Season", "Station.ID", "Lon", "Lat",
"Surface.T", "Bottom.T", "Surface.DO", "Bottom.DO",
"Start.Depth", "Depth.Bin", "daylength"))
#make sex vector
dislL$sex <- substr(as.character(dislL$variable),1,1)
dislL$sex <- as.factor(dislL$sex)
#make species name vector
dislL$species <- substr(as.character(dislL$variable), 3, nchar(as.character(dislL$variable)))
dislL$species <- as.factor(dislL$species)
# add binomial values vector
dislL$valuebin <- as.integer(ifelse(dislL$value > 0, 1, 0))
##Species only; Sex pooled #variable (irrelevant is species) sex & binomial lost
disl.nosex <- summaryBy(value ~ species + Year + Season + Station.ID + Lon + Lat,
data = dislL, FUN = c(sum),
id = c("Surface.T","Bottom.T", "Surface.DO", "Bottom.DO",
"Start.Depth", "Depth.Bin", "daylength"))
#Sexpooled wide====
#cast back to wide, combined sexes.
dislWide <- dcast(disl.nosex, Year + Season  + Station.ID + Lon + Lat +
Surface.T + Bottom.T + Surface.DO + Bottom.DO +
Start.Depth + Depth.Bin + daylength ~
species, value.var = "value.sum")
## Transform to presence abscence
dislWide_tmp <- as.matrix(dislWide[13:30])
dislWidebin <- data.frame(ifelse(dislWide_tmp > 0, 1, dislWide_tmp))
# Remove expvars now they've been used for wide-long-wide transform
disl3 <- disl3[13:43]
dislWide <- dislWide[13:30]
# subset resvars w >10 positive values
posSamples <- colSums(disl3bin)
posSamplesSub <- posSamples > 10
disl3sub <- disl3[posSamplesSub]
posSamples <- colSums(dislWidebin)
posSamplesSub <- posSamples > 10
dislWidesub <- dislWide[posSamplesSub]
# THIS IS POSSIBLY BROKEN
# add M & F manually from disl3sub. Pool in excel
write.csv(disl3, file = "disl3.csv")
# pooled in excel
disl3pool <- read.csv("disl3pool.csv")
posSamples <- colSums(disl3pool)
posSamplesSub <- posSamples > 10
dislWidesub <- disl3pool[posSamplesSub]
# 1 more expvar (finetooth), rows align with original rows in disl3 therefore with expvars.
# column order is original not alphabetical
# remove temp & unneeded objects
rm(list = c("disl", "disl_tmp", "dislWide_tmp", "missF", "missFimp", "sundata", "sunriseset", "char.ids", "datevec", "daylength", "posSamples", "posSamplesSub"))
#PreRun Status====
## disl2 : explanatory variables wide (same as John's dislX)
str(disl2)
# data.frame':	126 obs. of  12 variables:
#  $ Year       : int  2011 2011 2011 2011 2011 2011 2011 2011 2011 2011 ...
#  $ Season     : Ord.factor w/ 4 levels "Winter"<"Spring"<..: 4 4 4 4 4 4 4 4 4 4 ...
#  $ Station.ID : Factor w/ 126 levels "AD021413BL01",..: 80 81 82 83 92 93 94 95 96 97 ...
#  $ Lon        : num  -87.8 -88.3 -88.1 -88 -87.9 ...
#  $ Lat        : num  30.1 30.1 30.3 30.3 30.1 ...
#  $ Surface.T  : num  27.4 27.8 28.4 27.5 23 ...
#  $ Bottom.T   : num  27.4 27.6 27.1 27.1 24.6 ...
#  $ Surface.DO : num  6.33 6.52 7.65 7.53 6.81 6.92 8.21 9.56 7.08 6.8 ...
#  $ Bottom.DO  : num  4.82 5.73 4.6 3.19 5.7 6.3 7.36 7.08 6.87 6.7 ...
#  $ Start.Depth: num  16.8 17.7 2.6 2.6 17.2 16.4 2.9 2.8 25 33.5 ...
#  $ Depth.Bin  : Ord.factor w/ 3 levels "Shallow"<"Mid"<..: 2 2 1 1 2 2 1 1 2 3 ...
#  $ daylength  : num  12.2 12.2 12.2 12.2 11.2 ...
#
# column vectors to use: 1,2,4,6:12
expvars1 <- c(1,2,4,6:12)
expvars4 <- c(1,2,4,6:12,15)
#12.06 Sharpnose====
# 73 pos samples
mysamples <- dislL
mysamples[expvars4]
names(mysamples[expvars4])
# John & Simon's data formatting script 26.1.2017
#Code Prep----
#SetWD load install library====
setwd("/home/simon/Dropbox/PostDoc Work/Drymon Froeschke transect BRT/")
disl <- read.csv("disl.csv")
library(reshape2)
library(doBy)
library(plyr)
library(dplyr)
library(missForest)
library(suncalc)
library(gbm.auto)
# * installing *source* package ‘gbm.auto’ ...
# ** R
# ** data
# *** moving datasets to lazyload DB
# ** preparing package for lazy loading
# Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]]) :
#   there is no package called ‘survival’
#Errorfix valueadd wide====
# order season factors
disl$Season <- factor(disl$Season,
levels = c("Winter", "Spring", "Summer", "Fall"),
ordered = TRUE)
# Depth Bin: factor 3 levels reorder 'deep mid shallow' to 's m d'
disl$Depth.Bin <- factor(disl$Depth.Bin,
levels = c("Shallow", "Mid", "Deep"),
ordered = TRUE)
#Fix cuban.dogfish Female was coded instead of F
disl <- rename(disl, F.Cuban.dogfish = Female.Cuban.dogfish)
## make sure the non-numeric are treated correctly
char.ids <- unlist(lapply(disl,is.character))
disl[,char.ids] <- lapply(disl[,char.ids],as.factor)
#Impute missing values with random forest
missF <- missForest(disl[,6:11])
missFimp <- missF$ximp
disl2 <- cbind(disl[,1:5], missFimp[,1:6])
## Generate daylength
# acquire date from station.id
datevec <- paste0(paste0(20, substr(disl2$Station.ID, 7, 8)), "-",
substr(disl2$Station.ID, 3, 4), "-",
substr(disl2$Station.ID, 5, 6))
class(datevec) #character
datevec <- as.Date(datevec) # change to date format
class(datevec) #date
# get sunrise & sunset times for those latlons & dates
sundata <- data.frame(date = datevec,
lat = disl2$Lat,
lon = disl2$Lon)
sunriseset <- getSunlightTimes(data = sundata,
keep = c("sunrise", "sunset"),
tz = "America/Chicago")
#calc day length: sunset minus sunrise
daylength <- sunriseset$sunset - sunriseset$sunrise
class(daylength) #difftime
daylength <- as.numeric(daylength) #change to numeric format
class(daylength) #numeric
disl2 <- cbind(disl2, daylength) #add to dataframe
#update original disl with fixed/edited & new values
disl3 <- cbind(disl2, disl[,12:42])
#make bin values
disl_tmp <- as.matrix(disl3[,13:43])
disl3bin <- data.frame(ifelse(disl_tmp > 0, 1, disl_tmp))
##Long format====
##Sex-as-factors df
#Convert from wide to long
dislL <- melt(disl3, id = c("Year", "Season", "Station.ID", "Lon", "Lat",
"Surface.T", "Bottom.T", "Surface.DO", "Bottom.DO",
"Start.Depth", "Depth.Bin", "daylength"))
#make sex vector
dislL$sex <- substr(as.character(dislL$variable),1,1)
dislL$sex <- as.factor(dislL$sex)
#make species name vector
dislL$species <- substr(as.character(dislL$variable), 3, nchar(as.character(dislL$variable)))
dislL$species <- as.factor(dislL$species)
# add binomial values vector
dislL$valuebin <- as.integer(ifelse(dislL$value > 0, 1, 0))
##Species only; Sex pooled #variable (irrelevant is species) sex & binomial lost
disl.nosex <- summaryBy(value ~ species + Year + Season + Station.ID + Lon + Lat,
data = dislL, FUN = c(sum),
id = c("Surface.T","Bottom.T", "Surface.DO", "Bottom.DO",
"Start.Depth", "Depth.Bin", "daylength"))
#Sexpooled wide====
#cast back to wide, combined sexes.
dislWide <- dcast(disl.nosex, Year + Season  + Station.ID + Lon + Lat +
Surface.T + Bottom.T + Surface.DO + Bottom.DO +
Start.Depth + Depth.Bin + daylength ~
species, value.var = "value.sum")
## Transform to presence abscence
dislWide_tmp <- as.matrix(dislWide[13:30])
dislWidebin <- data.frame(ifelse(dislWide_tmp > 0, 1, dislWide_tmp))
# Remove expvars now they've been used for wide-long-wide transform
disl3 <- disl3[13:43]
dislWide <- dislWide[13:30]
# subset resvars w >10 positive values
posSamples <- colSums(disl3bin)
posSamplesSub <- posSamples > 10
disl3sub <- disl3[posSamplesSub]
posSamples <- colSums(dislWidebin)
posSamplesSub <- posSamples > 10
dislWidesub <- dislWide[posSamplesSub]
# THIS IS POSSIBLY BROKEN
# add M & F manually from disl3sub. Pool in excel
write.csv(disl3, file = "disl3.csv")
# pooled in excel
disl3pool <- read.csv("disl3pool.csv")
posSamples <- colSums(disl3pool)
posSamplesSub <- posSamples > 10
dislWidesub <- disl3pool[posSamplesSub]
# 1 more expvar (finetooth), rows align with original rows in disl3 therefore with expvars.
# column order is original not alphabetical
# remove temp & unneeded objects
rm(list = c("disl", "disl_tmp", "dislWide_tmp", "missF", "missFimp", "sundata", "sunriseset", "char.ids", "datevec", "daylength", "posSamples", "posSamplesSub"))
#PreRun Status====
## disl2 : explanatory variables wide (same as John's dislX)
str(disl2)
# data.frame':	126 obs. of  12 variables:
#  $ Year       : int  2011 2011 2011 2011 2011 2011 2011 2011 2011 2011 ...
#  $ Season     : Ord.factor w/ 4 levels "Winter"<"Spring"<..: 4 4 4 4 4 4 4 4 4 4 ...
#  $ Station.ID : Factor w/ 126 levels "AD021413BL01",..: 80 81 82 83 92 93 94 95 96 97 ...
#  $ Lon        : num  -87.8 -88.3 -88.1 -88 -87.9 ...
#  $ Lat        : num  30.1 30.1 30.3 30.3 30.1 ...
#  $ Surface.T  : num  27.4 27.8 28.4 27.5 23 ...
#  $ Bottom.T   : num  27.4 27.6 27.1 27.1 24.6 ...
#  $ Surface.DO : num  6.33 6.52 7.65 7.53 6.81 6.92 8.21 9.56 7.08 6.8 ...
#  $ Bottom.DO  : num  4.82 5.73 4.6 3.19 5.7 6.3 7.36 7.08 6.87 6.7 ...
#  $ Start.Depth: num  16.8 17.7 2.6 2.6 17.2 16.4 2.9 2.8 25 33.5 ...
#  $ Depth.Bin  : Ord.factor w/ 3 levels "Shallow"<"Mid"<..: 2 2 1 1 2 2 1 1 2 3 ...
#  $ daylength  : num  12.2 12.2 12.2 12.2 11.2 ...
#
# column vectors to use: 1,2,4,6:12
expvars1 <- c(1,2,4,6:12)
# Then potentially remove:
# year (1)
# need to add expvars & resvars for gbm.auto
mysamples <- cbind(disl2, disl3sub)
setwd("/home/simon/Dropbox/PostDoc Work/Drymon Froeschke transect BRT/Gbm_auto_runs/Pooled_sex_long/bin_nosimp/expvars4")
expvars4 <- c(1,2,4,6:12,15)
setwd("/home/simon/Dropbox/PostDoc Work/Drymon Froeschke transect BRT/Gbm_auto_runs/Pooled_sex_long/bin")
mysamples <- dislL
#9.01 blacknose====
# sum(disl3bin$F.blacknose)
# 48 pos samples
name <- "blacknose"
mysamples <- mysamples[mysamples$species == name,]
dir.create(paste0("./", name))
setwd(paste0("./", name))
gbm.auto(expvar = expvars4,
resvar = 17,
samples = mysamples,
lr = c(0.001),
#ZI = TRUE,
gaus = FALSE,
savegbm = FALSE,
BnW = FALSE)
#9.02 Blacktip====
# 36 pos samples
mysamples <- dislL
name <- "Blacktip"
mysamples <- mysamples[mysamples$species == name,]
setwd("../")
dir.create(paste0("./", name))
setwd(paste0("./", name))
gbm.auto(expvar = expvars4,
resvar = 17,
samples = mysamples,
lr = c(0.005),
#ZI = TRUE,
gaus = FALSE,
savegbm = FALSE,
BnW = FALSE)
#9.03 Bull====
# 16 pos samples
mysamples <- dislL
name <- "Bull"
mysamples <- mysamples[mysamples$species == name,]
setwd("../")
dir.create(paste0("./", name))
setwd(paste0("./", name))
gbm.auto(expvar = expvars4,
resvar = 17,
samples = mysamples,
lr = c(0.005),
#ZI = TRUE,
gaus = FALSE,
savegbm = FALSE,
BnW = FALSE)
mysamples <- dislL
name <- "Mustelus"
mysamples <- mysamples[mysamples$species == name,]
setwd("../")
dir.create(paste0("./", name))
setwd(paste0("./", name))
gbm.auto(expvar = expvars4,
resvar = 17,
samples = mysamples,
lr = c(0.005),
#ZI = TRUE,
gaus = FALSE,
savegbm = FALSE,
BnW = FALSE)
mysamples <- dislL
name <- "Scalloped.HH"
mysamples <- mysamples[mysamples$species == name,]
setwd("../")
dir.create(paste0("./", name))
setwd(paste0("./", name))
gbm.auto(expvar = expvars4,
resvar = 17,
samples = mysamples,
lr = c(0.0001),
#ZI = TRUE,
gaus = FALSE,
savegbm = FALSE,
BnW = FALSE)
mysamples <- dislL
name <- "Sharpnose"
mysamples <- mysamples[mysamples$species == name,]
setwd("../")
dir.create(paste0("./", name))
setwd(paste0("./", name))
gbm.auto(expvar = expvars4,
resvar = 17,
samples = mysamples,
lr = c(0.001),
#ZI = TRUE,
gaus = FALSE,
savegbm = FALSE,
BnW = FALSE)
mysamples <- dislL
name <- "Southern.Stingray"
mysamples <- mysamples[mysamples$species == name,]
setwd("../")
dir.create(paste0("./", name))
setwd(paste0("./", name))
gbm.auto(expvar = expvars4,
resvar = 17,
samples = mysamples,
lr = c(0.005),
#ZI = TRUE,
gaus = FALSE,
savegbm = FALSE,
BnW = FALSE)
mysamples <- dislL
name <- "Spinner"
mysamples <- mysamples[mysamples$species == name,]
setwd("../")
dir.create(paste0("./", name))
setwd(paste0("./", name))
gbm.auto(expvar = expvars4,
resvar = 17,
samples = mysamples,
lr = c(0.005),
#ZI = TRUE,
gaus = FALSE,
savegbm = FALSE,
BnW = FALSE)
mysamples <- dislL
name <- "Tiger"
mysamples <- mysamples[mysamples$species == name,]
setwd("../")
dir.create(paste0("./", name))
setwd(paste0("./", name))
gbm.auto(expvar = expvars4,
resvar = 17,
samples = mysamples,
lr = c(0.005),
#ZI = TRUE,
gaus = FALSE,
savegbm = FALSE,
BnW = FALSE)
setwd("/home/simon/Dropbox/Farallon Institute/Data & Analysis/Biological/PredPrey Trophic/Plankton/")
smallpl <- read.csv("CalCOFI_195101-201607_Zoop.csv")
# filter out HaulFact = 0
smallpl <- smallpl[smallpl$HaulFact != 0,]
# Date analysis
Year <- substring(smallpl$Tow_Date,7,10)
smallpl <- cbind(smallpl, Year)
Smallpl_latlon_yr <- read.csv(file = "Smallpl_latlon_yr.csv")
Smallpl_latlon_yr$Lon <- -Smallpl_latlon_yr$Lon # reverse Lon as it's W
Years <- na.omit(unique(Year)) # Year has NA between 2002 & 2003, why? Remove
# Map timeseries means at latlon locations
Smallpl_latlon_yr_mean <- read.csv(file = "Smallpl_latlon_yr_mean.csv")
# seasonal mean SPV values
Month <- as.factor(substring(smallpl$Tow_Date,4,5))
View(smallpl)
# BS:
# some selection of area is warranted then rerun of ANOVA.  Let's just look at the primary CalCOFI lines, 93 thru 77 (all stations on these lines).
# smallpl$St_Line format is line#.station so round DOWN to line number
lineno <- floor(smallpl$St_Line)
# BS:
# some selection of area is warranted then rerun of ANOVA.  Let's just look at the primary CalCOFI lines, 93 thru 77 (all stations on these lines).
# smallpl$St_Line format is line#.station so round DOWN to line number
CalCOFI_Line <- floor(smallpl$St_Line)
smallpl <- cbind(smallpl, CalCOFI_Line)
smallplcore <- subset[smallpl, CalCOFI_Line >= 77 & CalCOFI_Line <= 93,]
smallplcore <- subset(smallpl, CalCOFI_Line >= 77 & CalCOFI_Line <= 93,)
smpl_aov_core <- aov(Sml_PVolC3 ~ St_Station + Year + Month, data = smallplcore)
smallpl <- cbind(smallpl, Month)
smallplcore <- subset(smallpl, CalCOFI_Line >= 77 & CalCOFI_Line <= 93, ) # subset only primary lines
smpl_aov_core <- aov(Sml_PVolC3 ~ St_Station + Year + Month, data = smallplcore)
summary(smpl_aov)
summary(smpl_aov_core)
# Df    Sum Sq  Mean Sq F value Pr(>F)
# St_Station      1 1.623e+07 16229810  184.47 <2e-16 ***
#   Year           61 1.406e+08  2305026   26.20 <2e-16 ***
#   Month          11 3.820e+07  3472796   39.47 <2e-16 ***
#   Residuals   17592 1.548e+09    87979
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
# 3463 observations deleted due to missingness
plot(smpl_aov_core)
# Df    Sum Sq  Mean Sq F value Pr(>F)
# St_Station      1 1.623e+07 16229810  184.47 <2e-16 ***
#   Year           61 1.406e+08  2305026   26.20 <2e-16 ***
#   Month          11 3.820e+07  3472796   39.47 <2e-16 ***
#   Residuals   17592 1.548e+09    87979
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
# 3463 observations deleted due to missingness
plot(smpl_aov_core)
View(smpl_aov_core)
# Following 3-way ANOVA, plot (bi-plot of coefficient value for each year by year) as assessment of relative abundance.
# get the year by year coefficients from ANOVA and plot them
smpl_aov_core$coefficients
# Following 3-way ANOVA, plot (bi-plot of coefficient value for each year by year) as assessment of relative abundance.
# get the year by year coefficients from ANOVA and plot them
plot(smpl_aov_core$coefficients)
smpl_aov_core$coefficients[1]
smpl_aov_core$coefficients[1,]
smpl_aov_core$coefficients[,1]
names(smpl_aov_core$coefficients)
# Following 3-way ANOVA, plot (bi-plot of coefficient value for each year by year) as assessment of relative abundance.
# get the year by year coefficients from ANOVA and plot them
plot(smpl_aov_core$coefficients, xlab = names(smpl_aov_core$coefficients))
axis(side = 1, labels = names(smpl_aov_core$coefficients))
names(smpl_aov_core$coefficients)
# Following 3-way ANOVA, plot (bi-plot of coefficient value for each year by year) as assessment of relative abundance.
# get the year by year coefficients from ANOVA and plot them
plot(smpl_aov_core$coefficients)
axis(side = 1, labels = names(smpl_aov_core$coefficients))
# Following 3-way ANOVA, plot (bi-plot of coefficient value for each year by year) as assessment of relative abundance.
# get the year by year coefficients from ANOVA and plot them
plot(smpl_aov_core$coefficients)[3:63]
# Following 3-way ANOVA, plot (bi-plot of coefficient value for each year by year) as assessment of relative abundance.
# get the year by year coefficients from ANOVA and plot them
plot(smpl_aov_core$coefficients)[[3:63]]
# Following 3-way ANOVA, plot (bi-plot of coefficient value for each year by year) as assessment of relative abundance.
# get the year by year coefficients from ANOVA and plot them
plot(smpl_aov_core$coefficients)[,3:63]
smpl_aov_core$coefficients
length(smpl_aov_core$coefficients)
aovplot <- smpl_aov_core$coefficients
aovplot <- smpl_aov_core$coefficients[63]
aovplot <- smpl_aov_core$coefficients
aovplot[3]
aovplot[3:63]
plot(aovplot[3:63])
axis(side = 1, labels = names(smpl_aov_core$coefficients[3:63]))
axis(side = 1, at = 1:60, labels = names(smpl_aov_core$coefficients[3:63]))
axis(side = 1, at = 1:61, labels = names(smpl_aov_core$coefficients[3:63]))
plot(aovplot[3:63], ylab = "AoV CoEfficient", xlab = "Year")
names(smpl_aov_core$coefficients[3:63])
yrnames <- substring(names(smpl_aov_core$coefficients[3:63]),5,8)
yrnames
axis(side = 1, at = 1:61, labels = yrnames)
plot(aovplot[3:63], ylab = "AoV CoEfficient", xlab = "Year", xaxs = "n")
plot(aovplot[3:63], ylab = "AoV CoEfficient", xlab = "Year", xaxt = "n")
axis(side = 1, at = 1:61, labels = yrnames)
plot(aovplot[3:63], ylab = "AoV CoEfficient", xlab = "Year", xaxt = "n", type = "b")
axis(side = 1, at = 1:61, labels = yrnames)
plot(aovplot[3:63], ylab = "AoV CoEfficient", xlab = "Year", xaxt = "n", type = "b", las = 3)
axis(side = 1, at = 1:61, labels = yrnames)
axis(side = 1, at = 1:61, labels = yrnames, las = 3)
plot(aovplot[3:63], ylab = "AoV CoEfficient", xlab = "Year", xaxt = "n", type = "b")
axis(side = 1, at = 1:61, labels = yrnames, las = 3)
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
document()
x = TRUE
if (x = FALSE) print("FALSE")
if (x == FALSE) print("FALSE")
if (x == TRUE) print("true")
document()
# read in data
capam <- read.csv("/home/simon/Dropbox/PostDoc Work/CAPAM model compare paper/LLsim2 data/LLSim_data_PopX.csv")
View(capam)
View(capam)
