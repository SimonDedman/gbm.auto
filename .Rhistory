samples <- read.csv("samples20190204.csv")
levels(as.factor(samples$BOTTOM.TYPE))
library(devtools)
install_github("SimonDedman/gbm.auto", force = TRUE) # update gbm.auto to latest
library(gbm.auto)
gbm.auto(grids = NULL,
samples = samples,
expvar = c(2,13,15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26), #using almost all vars
resvar = 10,
tc = c(2),
lr = c(0.01, 0.005),
bf = 0.5,
n.trees = 50,
ZI = "CHECK",
fam1 = "bernoulli",
fam2 = "gaussian",
simp = TRUE,
gridslat = 5,
gridslon = 4,
multiplot = TRUE,
cols = grey.colors(1, 1, 1),
linesfiles = TRUE,
smooth = FALSE,
savegbm = TRUE,
varint = TRUE,
map = TRUE,
shape = NULL,
RSB = TRUE,
BnW = TRUE,
alerts = TRUE,
pngtype = "cairo-png",
gaus = TRUE,
...)
gbm.auto(grids = NULL,
samples = samples,
expvar = c(2,13,15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26), #using almost all vars
resvar = 10,
tc = c(2),
lr = c(0.01, 0.005),
bf = 0.5,
n.trees = 50,
ZI = "CHECK",
fam1 = "bernoulli",
fam2 = "gaussian",
simp = TRUE,
gridslat = 5,
gridslon = 4,
multiplot = TRUE,
cols = grey.colors(1, 1, 1),
linesfiles = TRUE,
smooth = FALSE,
savegbm = TRUE,
varint = TRUE,
map = TRUE,
shape = NULL,
RSB = TRUE,
BnW = TRUE,
alerts = TRUE,
pngtype = "cairo-png",
gaus = TRUE)
dev.off()
dev.off()
dev.off()
setwd("/media/Seagate/Work/PostDoc Work/Andrea BRT/")
gbm.auto(grids = NULL,
samples = samples,
expvar = c(2,13,15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26), #using almost all vars
resvar = 10,
tc = c(2),
lr = c(0.01, 0.005),
bf = 0.5,
n.trees = 50,
ZI = "CHECK",
fam1 = "bernoulli",
fam2 = "gaussian",
simp = TRUE,
gridslat = 5,
gridslon = 4,
multiplot = TRUE,
cols = grey.colors(1, 1, 1),
linesfiles = TRUE,
smooth = FALSE,
savegbm = TRUE,
varint = TRUE,
map = TRUE,
shape = NULL,
RSB = TRUE,
BnW = TRUE,
alerts = TRUE,
pngtype = "cairo-png",
gaus = TRUE)
# Fix colnames
colnames(samples)
colnames(samples)[10]
colnames(samples)[10] <- "P.Pectinata"
colnames(samples)[11] <- "Mesh.Inch"
colnames(samples)[12] <- "Net.Length.Ft"
colnames(samples)[16] <- "Water.Temp.C"
colnames(samples)[17] <- "DO.MgL"
colnames(samples)[18] <- "DO.Pct"
setwd("/media/Seagate/Work/PostDoc Work/Andrea BRT/")
gbm.auto(grids = NULL,
samples = samples,
expvar = c(2,13,15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26), #using almost all vars
resvar = 10,
tc = c(2),
lr = c(0.01, 0.005),
bf = 0.5,
n.trees = 50,
ZI = "CHECK",
fam1 = "bernoulli",
fam2 = "gaussian",
simp = TRUE,
gridslat = 5,
gridslon = 4,
multiplot = TRUE,
cols = grey.colors(1, 1, 1),
linesfiles = TRUE,
smooth = FALSE,
savegbm = TRUE,
varint = TRUE,
map = TRUE,
shape = NULL,
RSB = TRUE,
BnW = TRUE,
alerts = TRUE,
pngtype = "cairo-png",
gaus = TRUE)
# Fix colnames
colnames(samples)
samples <- read.csv("samples20190204.csv")
# Fix colnames
colnames(samples)
colnames(samples)[10] <- "P.Pectinata"
colnames(samples)[11] <- "Mesh.Inch"
colnames(samples)[12] <- "Net.Length.Ft"
colnames(samples)[16] <- "Water.Temp.C"
colnames(samples)[20] <- "DO.MgL"
colnames(samples)[21] <- "DO.Pct"
library(gbm.auto)
setwd("/media/Seagate/Work/PostDoc Work/Andrea BRT/")
gbm.auto(grids = NULL,
samples = samples,
expvar = c(2,13,15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26), #using almost all vars
resvar = 10,
tc = c(2),
lr = c(0.01, 0.005),
bf = 0.5,
n.trees = 50,
ZI = "CHECK",
fam1 = "bernoulli",
fam2 = "gaussian",
simp = TRUE,
gridslat = 5,
gridslon = 4,
multiplot = TRUE,
cols = grey.colors(1, 1, 1),
linesfiles = TRUE,
smooth = FALSE,
savegbm = TRUE,
varint = TRUE,
map = TRUE,
shape = NULL,
RSB = TRUE,
BnW = TRUE,
alerts = TRUE,
pngtype = "cairo-png",
gaus = TRUE)
samples$AGAINST.SHORELINE <- as.factor(samples$AGAINST.SHORELINE)
library(gbm.auto)
setwd("/media/Seagate/Work/Galway PhD/Project Sections/4b. Methods Paper BRT/Chuck Paper/")
DuskyStatSept_sharks <- read.csv("DuskySeptSharks.csv")
SepGridSetup <- read.csv("SepGridSetup.csv")
#Running the model
#colnames(DuskyStatSept_sharks)[c(7,9,10)] #"Depth" "SST"   "Chla"
library(shapefiles)
BaseMap <- read.shapefile("/media/Seagate/Work/Galway PhD/Project Sections/4b. Methods Paper BRT/Chuck Paper/CroppedMap/Crop_Map")
rsb <- read.csv("./Species/RSB.csv")
gridslat = 4
gridslon = 5
png(filename = "rsbtmp.png",
width = 4*1920, height = 4*1920, units = "px", pointsize = 4*48, bg = "white", res = NA, family = "", type = "cairo-png")
par(mar = c(3.2,3,1.3,0), las = 1, mgp = c(2.1,0.5,0),xpd = FALSE)
gbm.map(x = SepGridSetup[,gridslon], # add Unrepresentativeness alpha surface
y = SepGridSetup[,gridslat],
z = rsb[,"Unrepresentativeness"],
mapmain = "Unrepresentativeness: ",
species = "Species",
legendtitle = "UnRep 0-1",
shape = BaseMap, #either autogenerated or set by user so never blank
breaks = expm1(breaks.grid(log(2000), ncol = 8, zero = TRUE))/2000)
dev.off() #high value log breaks mean first ~5 values cluster near 0 for high
tmpexpvarnames <- names(DuskyStatSept_sharks[c(7,9,10)])
tmprsbdf_bin <- gbm.rsb(samples = DuskyStatSept_sharks,
grids = SepGridSetup,
expvarnames = tmpexpvarnames,
gridslat = 4,
gridslon = 5)
View(tmprsbdf_bin)
write.csv(tmprsbdf_bin, row.names = FALSE, file = "tmpRSB.csv")
write.csv(tmprsbdf_bin, row.names = FALSE, file = "tmpRSB.csv")
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
document()
library(devtools)
install_github("SimonDedman/gbm.auto", force = TRUE) # update gbm.auto to latest
library(gbm.auto)
gbm.auto
setwd("/media/Seagate/Work/Galway PhD/Project Sections/4b. Methods Paper BRT/Chuck Paper/")
DuskyStatSept_sharks <- read.csv("DuskySeptSharks.csv")
SepGridSetup <- read.csv("SepGridSetup.csv")
#Running the model
#colnames(DuskyStatSept_sharks)[c(7,9,10)] #"Depth" "SST"   "Chla"
library(shapefiles)
BaseMap <- read.shapefile("/media/Seagate/Work/Galway PhD/Project Sections/4b. Methods Paper BRT/Chuck Paper/CroppedMap/Crop_Map")
gbm.auto(expvar = c(7,9,10),
resvar = 11,
grids = SepGridSetup,
samples = DuskyStatSept_sharks,
lr = c(0.001),
bf = c(0.75),
tc = c(2),
gridslat = 4,
gridslon = 5,
shape = BaseMap,
#pngtype="quartz",
gaus = FALSE,
varint = FALSE,
simp = FALSE,
max.trees = 10000,
heatcolours = c("white","azure3","azure4","lightsteelblue4","steelblue2","steelblue3","steelblue4"),
BnW = FALSE)
install_github("SimonDedman/gbm.auto", force = TRUE) # update gbm.auto to latest
install_github("SimonDedman/gbm.auto", force = TRUE) # update gbm.auto to latest
library(gbm.auto)
gbm.auto
install_github("SimonDedman/gbm.auto", force = TRUE) # update gbm.auto to latest
library(devtools)
install_github("SimonDedman/gbm.auto", force = TRUE) # update gbm.auto to latest
library(gbm.auto)
gbm.auto
setwd("/media/Seagate/Work/Galway PhD/Project Sections/4b. Methods Paper BRT/Chuck Paper/")
DuskyStatSept_sharks <- read.csv("DuskySeptSharks.csv")
SepGridSetup <- read.csv("SepGridSetup.csv")
#Running the model
#colnames(DuskyStatSept_sharks)[c(7,9,10)] #"Depth" "SST"   "Chla"
library(shapefiles)
BaseMap <- read.shapefile("/media/Seagate/Work/Galway PhD/Project Sections/4b. Methods Paper BRT/Chuck Paper/CroppedMap/Crop_Map")
gbm.auto(expvar = c(7,9,10),
resvar = 11,
grids = SepGridSetup,
samples = DuskyStatSept_sharks,
lr = c(0.001),
bf = c(0.75),
tc = c(2),
gridslat = 4,
gridslon = 5,
shape = BaseMap,
#pngtype="quartz",
gaus = FALSE,
varint = FALSE,
simp = FALSE,
max.trees = 10000,
heatcolours = c("white","azure3","azure4","lightsteelblue4","steelblue2","steelblue3","steelblue4"),
BnW = FALSE)
gridslat = 4
gridslon = 5
rsb <- read.csv("./Species/RSB.csv")
#works, using re-read in exported csv file
png(filename = "rsbtmp.png",
width = 4*1920, height = 4*1920, units = "px", pointsize = 4*48, bg = "white", res = NA, family = "", type = "cairo-png")
par(mar = c(3.2,3,1.3,0), las = 1, mgp = c(2.1,0.5,0),xpd = FALSE)
gbm.map(x = SepGridSetup[,gridslon], # add Unrepresentativeness alpha surface
y = SepGridSetup[,gridslat],
z = rsb[,"Unrepresentativeness"],
mapmain = "Unrepresentativeness: ",
species = "Species",
legendtitle = "UnRep 0-1",
shape = BaseMap, #either autogenerated or set by user so never blank
breaks = expm1(breaks.grid(log(2000), ncol = 8, zero = TRUE))/2000)
dev.off() #high value log breaks mean first ~5 values cluster near 0 for high
library(devtools)
install_github("SimonDedman/gbm.auto", force = TRUE) # update gbm.auto to latest
install_github("SimonDedman/gbm.auto", force = TRUE) # update gbm.auto to latest
library(gbm.auto)
gbm.auto
setwd("/media/Seagate/Work/Galway PhD/Project Sections/4b. Methods Paper BRT/Chuck Paper/")
DuskyStatSept_sharks <- read.csv("DuskySeptSharks.csv")
SepGridSetup <- read.csv("SepGridSetup.csv")
#Running the model
#colnames(DuskyStatSept_sharks)[c(7,9,10)] #"Depth" "SST"   "Chla"
library(shapefiles)
BaseMap <- read.shapefile("/media/Seagate/Work/Galway PhD/Project Sections/4b. Methods Paper BRT/Chuck Paper/CroppedMap/Crop_Map")
gbm.auto(expvar = c(7,9,10),
resvar = 11,
grids = SepGridSetup,
samples = DuskyStatSept_sharks,
lr = c(0.001),
bf = c(0.75),
tc = c(2),
gridslat = 4,
gridslon = 5,
shape = BaseMap,
#pngtype="quartz",
gaus = FALSE,
varint = FALSE,
simp = FALSE,
max.trees = 10000,
heatcolours = c("white","azure3","azure4","lightsteelblue4","steelblue2","steelblue3","steelblue4"),
BnW = FALSE)
library(devtools)
install_github("SimonDedman/gbm.auto", force = TRUE) # update gbm.auto to latest
library(gbm.auto)
gbm.auto
install_github("SimonDedman/gbm.auto", force = TRUE) # update gbm.auto to latest
gbm.auto
library(devtools)
install_github("SimonDedman/gbm.auto", force = TRUE) # update gbm.auto to latest
install_github("SimonDedman/gbm.auto", force = TRUE) # update gbm.auto to latest
library(gbm.auto)
gbm.auto
setwd("/media/Seagate/Work/Galway PhD/Project Sections/4b. Methods Paper BRT/Chuck Paper/")
DuskyStatSept_sharks <- read.csv("DuskySeptSharks.csv")
SepGridSetup <- read.csv("SepGridSetup.csv")
gbm.auto(expvar = c(7,9,10),
resvar = 11,
grids = SepGridSetup,
samples = DuskyStatSept_sharks,
lr = c(0.001),
bf = c(0.75),
tc = c(2),
gridslat = 4,
gridslon = 5,
shape = BaseMap,
#pngtype="quartz",
gaus = FALSE,
varint = FALSE,
simp = FALSE,
max.trees = 10000,
heatcolours = c("white","azure3","azure4","lightsteelblue4","steelblue2","steelblue3","steelblue4"),
BnW = FALSE,
savegbm = FALSE)
library(gbm.auto)
#Running the model
#colnames(DuskyStatSept_sharks)[c(7,9,10)] #"Depth" "SST"   "Chla"
library(shapefiles)
BaseMap <- read.shapefile("/media/Seagate/Work/Galway PhD/Project Sections/4b. Methods Paper BRT/Chuck Paper/CroppedMap/Crop_Map")
gbm.auto(expvar = c(7,9,10),
resvar = 11,
grids = SepGridSetup,
samples = DuskyStatSept_sharks,
lr = c(0.001),
bf = c(0.75),
tc = c(2),
gridslat = 4,
gridslon = 5,
shape = BaseMap,
#pngtype="quartz",
gaus = FALSE,
varint = FALSE,
simp = FALSE,
max.trees = 10000,
heatcolours = c("white","azure3","azure4","lightsteelblue4","steelblue2","steelblue3","steelblue4"),
BnW = FALSE,
savegbm = FALSE)
gbm.testfun <- function(samples, grids, expvar, gridslat, gridslon){
expvarnames <- names(samples[expvar])
rsbdf_bin <- gbm.rsb(samples, grids, expvarnames, gridslat, gridslon)
png(filename = "testfunRSB.png",
width = 4*1920, height = 4*1920, units = "px", pointsize = 4*48, bg = "white", res = NA, family = "", type = "cairo-png")
par(mar = c(3.2,3,1.3,0), las = 1, mgp = c(2.1,0.5,0),xpd = FALSE)
gbm.map(x = grids[,gridslon],
y = grids[,gridslat],
z = rsbdf_bin[,"Unrepresentativeness"],
mapmain = "Unrepresentativeness: ",
species = names(samples[i]),
legendtitle = "UnRep 0-1",
shape = shape, #either autogenerated or set by user so never blank
breaks = expm1(breaks.grid(log(2000), ncol = 8, zero = TRUE))/2000)
dev.off() #high value log breaks mean first ~5 values cluster near 0 for high
}
getwd()
gbm.testfun(samples = DuskyStatSept_sharks,
grids = SepGridSetup,
expvar = c(7,9,10),
gridslat = 4,
gridslon = 5)
gbm.testfun <- function(samples, grids, expvar, gridslat, gridslon, shape){
expvarnames <- names(samples[expvar])
rsbdf_bin <- gbm.rsb(samples, grids, expvarnames, gridslat, gridslon)
png(filename = "testfunRSB.png",
width = 4*1920, height = 4*1920, units = "px", pointsize = 4*48, bg = "white", res = NA, family = "", type = "cairo-png")
par(mar = c(3.2,3,1.3,0), las = 1, mgp = c(2.1,0.5,0),xpd = FALSE)
gbm.map(x = grids[,gridslon],
y = grids[,gridslat],
z = rsbdf_bin[,"Unrepresentativeness"],
mapmain = "Unrepresentativeness: ",
species = names(samples[i]),
legendtitle = "UnRep 0-1",
shape = shape, #either autogenerated or set by user so never blank
breaks = expm1(breaks.grid(log(2000), ncol = 8, zero = TRUE))/2000)
dev.off() #high value log breaks mean first ~5 values cluster near 0 for high
}
gbm.testfun(samples = DuskyStatSept_sharks,
grids = SepGridSetup,
expvar = c(7,9,10),
gridslat = 4,
gridslon = 5,
shape = BaseMap)
gbm.testfun <- function(samples, grids, expvar, gridslat, gridslon, shape){
expvarnames <- names(samples[expvar])
rsbdf_bin <- gbm.rsb(samples, grids, expvarnames, gridslat, gridslon)
png(filename = "testfunRSB.png",
width = 4*1920, height = 4*1920, units = "px", pointsize = 4*48, bg = "white", res = NA, family = "", type = "cairo-png")
par(mar = c(3.2,3,1.3,0), las = 1, mgp = c(2.1,0.5,0),xpd = FALSE)
gbm.map(x = grids[,gridslon],
y = grids[,gridslat],
z = rsbdf_bin[,"Unrepresentativeness"],
mapmain = "Unrepresentativeness: ",
species = "testspecies",
legendtitle = "UnRep 0-1",
shape = shape, #either autogenerated or set by user so never blank
breaks = expm1(breaks.grid(log(2000), ncol = 8, zero = TRUE))/2000)
dev.off() #high value log breaks mean first ~5 values cluster near 0 for high
}
gbm.testfun(samples = DuskyStatSept_sharks,
grids = SepGridSetup,
expvar = c(7,9,10),
gridslat = 4,
gridslon = 5,
shape = BaseMap)
detach("package:devtools", unload=TRUE)
detach("package:gbm.auto", unload=TRUE)
detach("package:gbm", unload=TRUE)
detach("package:beepr", unload=TRUE)
detach("package:dismo", unload=TRUE)
detach("package:mapplots", unload=TRUE)
detach("package:raster", unload=TRUE)
detach("package:sp", unload=TRUE)
detach("package:shapefiles", unload=TRUE)
detach("package:usethis", unload=TRUE)
library(devtools)
install_github("SimonDedman/gbm.auto", force = TRUE) # update gbm.auto to latest
library(gbm.auto)
library(devtools)
install_github("SimonDedman/gbm.auto", force = TRUE) # update gbm.auto to latest
library(gbm.auto)
gbm.auto
setwd("/media/Seagate/Work/Galway PhD/Project Sections/4b. Methods Paper BRT/Chuck Paper/")
DuskyStatSept_sharks <- read.csv("DuskySeptSharks.csv")
SepGridSetup <- read.csv("SepGridSetup.csv")
#Running the model
#colnames(DuskyStatSept_sharks)[c(7,9,10)] #"Depth" "SST"   "Chla"
library(shapefiles)
BaseMap <- read.shapefile("/media/Seagate/Work/Galway PhD/Project Sections/4b. Methods Paper BRT/Chuck Paper/CroppedMap/Crop_Map")
gbm.auto(expvar = c(7,9,10),
resvar = 11,
grids = SepGridSetup,
samples = DuskyStatSept_sharks,
lr = c(0.001),
bf = c(0.75),
tc = c(2),
gridslat = 4,
gridslon = 5,
shape = BaseMap,
#pngtype="quartz",
gaus = FALSE,
varint = FALSE,
simp = FALSE,
max.trees = 10000,
heatcolours = c("white","azure3","azure4","lightsteelblue4","steelblue2","steelblue3","steelblue4"),
BnW = FALSE,
savegbm = FALSE)
linear01seq <- seq(from = 0, to = 1, length.out = 9) #linear sequence from 0:1, 9 bins
exp01seq <- expm1(4*linear01seq)/expm1(4) # exponentiate to change shape then scale back to 1
linear01seq
exp01seq
library(devtools)
install_github("SimonDedman/gbm.auto", force = TRUE) # update gbm.auto to latest
library(gbm.auto)
gbm.auto
install_github("SimonDedman/gbm.auto", force = TRUE) # update gbm.auto to latest
library(gbm.auto)
gbm.auto
library(devtools)
install_github("SimonDedman/gbm.auto", force = TRUE) # update gbm.auto to latest
library(gbm.auto)
gbm.auto
setwd("/media/Seagate/Work/Galway PhD/Project Sections/4b. Methods Paper BRT/Chuck Paper/")
DuskyStatSept_sharks <- read.csv("DuskySeptSharks.csv")
SepGridSetup <- read.csv("SepGridSetup.csv")
#Running the model
#colnames(DuskyStatSept_sharks)[c(7,9,10)] #"Depth" "SST"   "Chla"
library(shapefiles)
BaseMap <- read.shapefile("/media/Seagate/Work/Galway PhD/Project Sections/4b. Methods Paper BRT/Chuck Paper/CroppedMap/Crop_Map")
gbm.auto(expvar = c(7,9,10),
resvar = 11,
grids = SepGridSetup,
samples = DuskyStatSept_sharks,
lr = c(0.001),
bf = c(0.75),
tc = c(2),
gridslat = 4,
gridslon = 5,
shape = BaseMap,
#pngtype="quartz",
gaus = FALSE,
varint = FALSE,
simp = FALSE,
max.trees = 10000,
heatcolours = c("white","azure3","azure4","lightsteelblue4","steelblue2","steelblue3","steelblue4"),
BnW = FALSE,
savegbm = FALSE)
