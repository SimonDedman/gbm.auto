varint = T,
shape = coast)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.basemap.R')
message("
------------------------------------
This session has been reset.
------------------------------------
")
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
library(devtools)
build()
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
library(devtools)
document()
build()
library(gbm.auto)
data(grids)
data(samples)
setwd("/home/simon/Desktop/gbmauto/")
library(shapefiles)
coast <- read.shapefile("/home/simon/Desktop/gbmauto/CroppedMap/Crop_Map")
gbm.auto(grids = grids,
samples = samples,
expvar = c(4:8, 10),
resvar = 11,
tc = c(7),
lr = c(0.005),
ZI = TRUE,
savegbm = FALSE,
multiplot = T,
linesfiles = T,
varint = T,
shape = coast)
getwd()
gbm.auto(grids = grids,
samples = samples,
expvar = c(4:8, 10),
resvar = 11,
tc = c(7),
lr = c(0.005),
ZI = TRUE,
savegbm = FALSE,
multiplot = T,
linesfiles = T,
varint = T,
shape = coast)
gbm.auto(grids = grids,
samples = samples,
expvar = c(4:8, 10),
resvar = 11,
tc = c(7),
lr = c(0.005),
ZI = TRUE,
savegbm = FALSE,
multiplot = T,
linesfiles = T,
varint = T)
getwd()
setwd("/home/simon/Desktop/gbmauto/")
gbm.auto(grids = grids,
samples = samples,
expvar = c(4:8, 10),
resvar = 11,
tc = c(7),
lr = c(0.005),
ZI = TRUE,
savegbm = FALSE,
multiplot = T,
linesfiles = T,
varint = T)
gbm.auto(grids = grids,
samples = samples,
expvar = c(4:8, 10),
resvar = 11,
tc = c(7),
lr = c(0.005),
ZI = TRUE,
savegbm = FALSE,
multiplot = T,
linesfiles = T,
varint = T)
library(devtools)
build()
check()
library(devtools)
install_github("SimonDedman/gbm.auto", force = T)
library(gbm.auto)
data(grids)
data(samples)
setwd("/home/simon/Desktop/gbmauto/")
library(shapefiles)
coast <- read.shapefile("/home/simon/Desktop/gbmauto/CroppedMap/Crop_Map")
gbm.auto(grids = grids,
samples = samples,
expvar = c(4:8, 10),
resvar = 11,
tc = c(7),
lr = c(0.005),
ZI = TRUE,
savegbm = FALSE,
multiplot = T,
linesfiles = T,
varint = T,
shape = coast)
gbm.auto(grids = grids,
samples = samples,
expvar = c(4:8, 10),
resvar = 11,
tc = 7,
lr = 0.005,
savegbm = TRUE)
gbm.auto(grids = grids,
samples = samples,
expvar = c(4:8, 10),
resvar = 11,
tc = 7,
lr = 0.005,
savegbm = TRUE)
gbm.auto(grids = grids,
samples = samples,
expvar = c(4:8, 10),
resvar = 11,
tc = 7,
lr = 0.005,
savegbm = TRUE)
devtools::release()
library(devtools)
release()
spell_check()
build()
spell_check()
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.basemap.R')
spell_check()
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.basemap.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.map.R')
build()
spell_check()
document()
build()
spell_check()
release()
check_rhub()
release()
check_win_devel()
release()
build()
document()
build()
release()
library(devtools)
document()
build()
release()
library(devtools)
document()
build()
release()
install.packages("gitcreds")
library(gitcreds)
gitcreds_set()
#' @param preddat Predicted data.
#'
#' @return roc & calibration stats internally within gbm runs e.g. in gbm.auto.
#' @importFrom gbm predict.gbm
#' @importFrom grDevices topo.colors
#' @importFrom graphics image
#' @importFrom stats binomial glm pchisq poisson
#' @importFrom utils write.table
#' @author Simon Dedman, \email{simondedman@@gmail.com}
#'
roc <- function(obsdat, preddat) {
# code adapted from Ferrier, Pearce and Watson's code, by J.Elith
# see: Hanley, J.A. & McNeil, B.J. (1982) The meaning and use of the area
# under a Receiver Operating Characteristic (ROC) curve. Radiology, 143, 29-36
#
# Pearce, J. & Ferrier, S. (2000) Evaluating the predictive performance of habitat models developed using logistic regression.
# Ecological Modelling, 133, 225-245.
# this is the non-parametric calculation for area under the ROC curve, using the fact that a MannWhitney U statistic is closely related to
# the area. In dismo, this is used in the gbm routines, but not elsewhere (see evaluate).
if (length(obsdat) != length(preddat))
stop("obs and preds must be equal lengths")
n.x <- length(obsdat[obsdat == 0])
n.y <- length(obsdat[obsdat == 1])
xy <- c(preddat[obsdat == 0], preddat[obsdat == 1])
rnk <- rank(xy)
wilc <- ((n.x * n.y) + ((n.x * (n.x + 1))/2) - sum(rnk[1:n.x]))/(n.x * n.y)
return(round(wilc, 4))
}
roc(obsdat = rbinom(100), preddat = pnorm(100))
roc(obsdat = rbinom(100, size = 1), preddat = pnorm(100))
roc(obsdat = rbinom(100, size = 1, prob = 0.5), preddat = pnorm(100))
rbinom(100, size = 1, prob = 0.5)
length(rbinom(100, size = 1, prob = 0.5))
pnorm(100)
runif(100)
roc(obsdat = rbinom(100, size = 1, prob = 0.5), preddat = runif(100))
roc(obsdat = runif(100), preddat = runif(100))
options()
options$error
options[[error]]
options(error = function() {
beep(9)  # give warning noise if it fails
graphics.off() # kill all graphics devices
setwd(wd) # reinstate original working directory
} # close options subcurly
)
options
options()
oldoptions <- options()
options()
options(error = function() {
beep(9)  # give warning noise if it fails
graphics.off() # kill all graphics devices
setwd(wd) # reinstate original working directory
} # close options subcurly
)
options()
options(oldoptions)
options()
str(options("width"))
str(options("error"))
getOption("error")
options()
str(options("error"))
getOption("error")
tmp <- options("error")
tmp[[1]]
tmp[[2]] <- 1:10
options(error = function() {
beep(9)  # give warning noise if it fails
graphics.off() # kill all graphics devices
# setwd(wd) # reinstate original working directory
} # close options subcurly
)
getOption("error")
options(error = function() {.rs.recordTraceback(TRUE, 5, .rs.enqueueError)})
getOption("error")
options(error = function() {
beep(9)  # give warning noise if it fails
graphics.off() # kill all graphics devices
# setwd(wd) # reinstate original working directory
} # close options subcurly
)
getOption("error")
options(error = function() {.rs.recordTraceback(TRUE, 5, .rs.enqueueError)})
getOption("error")
oldpar <- par(no.readonly = TRUE)
oldwd <- getwd()
oldoptions <- options()
on.exit(par(oldpar))
on.exit(setwd(oldwd), add = TRUE)
on.exit(options(oldoptions), add = TRUE)
getOption("error")
str(getOption("error"))  # (function() {.rs.recordTraceback(TRUE, 5, .rs.enqueueError)})()
class(getOption("error"))  # (function() {.rs.recordTraceback(TRUE, 5, .rs.enqueueError)})()
as.character(getOption("error"))  # (function() {.rs.recordTraceback(TRUE, 5, .rs.enqueueError)})()
# call
# as.character "function () \n{\n    .rs.recordTraceback(TRUE, 5, .rs.enqueueError)\n}"
class(options("error")[[1]])
as.character(getOption("error"))
options(error = function() {
beep(9)  # give warning noise if it fails
graphics.off() # kill all graphics devices
# setwd(wd) # reinstate original working directory
} # close options subcurly
) # close options
as.character(getOption("error"))
options(error = function() {
beep(9)# give warning noise if it fails
graphics.off()# kill all graphics devices
# setwd(wd) # reinstate original working directory
} # close options subcurly
) # close options
as.character(getOption("error"))  # (function() {.rs.recordTraceback(TRUE, 5, .rs.enqueueError)})()
getOption("error")
switch(menu(c("List letters", "List LETTERS")) + 1,
cat("Nothing done\n"),
letters,
LETTERS)
switch(menu(c("List letters", "List LETTERS")) + 1,
cat("Nothing done\n"),
letters,
LETTERS)
switch(menu(c("List letters", "List LETTERS")) + 1,
cat("Nothing done\n"),
letters,
LETTERS)
menu(c("List letters", "List LETTERS"))
menu(c("List letters",
"List LETTERS")) + 1
menu(c("List letters",
"List LETTERS")) + 1
letters
LETTERS
switch(menu(c("List letters",
"List LETTERS")),
cat("Nothing done\n"),
letters,
LETTERS)
switch(menu(c("List letters",
"List LETTERS")),
cat("Nothing done\n"),
letters,
LETTERS)
switch(menu(c("List letters",
"List LETTERS")),
cat("Nothing done\n"),
letters,
LETTERS)3
switch(menu(c("List letters",
"List LETTERS")),
cat("Nothing done\n"),
letters,
LETTERS)
switch(menu(c("List letters",
"List LETTERS")),
cat("Nothing done\n"),
letters,
LETTERS)
switch(menu(c("List letters", # answer 1, + 1, = 2
"List LETTERS")) + 1, # answer 2, + 1, = 3
cat("Nothing done\n"), # switch1 = answer 0 + 1 = 1
letters, # switch2 = answer 2
LETTERS) # switch3 = answer2
switch(choices = menu(c("List letters", # answer 1, + 1, = 2
"List LETTERS")) + 1, # answer 2, + 1, = 3
cat("Nothing done\n"), # switch1 = answer 0 + 1 = 1
letters, # switch2 = answer 2
LETTERS) # switch3 = answer2
switch(menu(choices = c("List letters", # answer 1, + 1, = 2
"List LETTERS")) + 1, # answer 2, + 1, = 3
cat("Nothing done\n"), # switch1 = answer 0 + 1 = 1
letters, # switch2 = answer 2
LETTERS) # switch3 = answer2
samples <- list()
samples <- "cuckoo"
switch(menu(choices = c("YES", # answer 1, + 1, = 2
"NO"),
title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?"
) + 1, # answer 2, + 1, = 3
cat("Nothing done\n"), # switch1 = answer 0 + 1 = 1
print(paste0("Files will be saved to a subfolder called ", samples, " in the current folder ", getwd())), # switch2 = answer 2
LETTERS) # switch3 = answer2
switch(menu(choices = c("YES", # answer 1, + 1, = 2
"NO"),
title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?"
) + 1, # answer 2, + 1, = 3
cat("Nothing done\n"), # switch1 = answer 0 + 1 = 1
print(paste0("Files will be saved to a subfolder called ", samples, " in the current folder ", getwd())), # switch2 = answer 2
setwd(tempdir())) # switch3 = answer2
switch(menu(choices = c("YES", # answer 1, + 1, = 2
"NO"),
title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?"
) + 1, # answer 2, + 1, = 3
cat("Nothing done\n"), # switch1 = answer 0 + 1 = 1
print(paste0("Files will be saved to a subfolder called ", samples, " in the current folder ", getwd())), # switch2 = answer 2
setwd(tempdir())) # switch3 = answer2
getwd()
switch(menu(choices = c("YES, as a subfolder within my current working directory", # answer 1, + 1, = 2
"Yes, but to a temporary folder",
"NO"),
title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?") + 1, # answer 2, + 1, = 3
cat("Nothing done\n"), # switch1 = answer 0 + 1 = 1
print(paste0("Files will be saved to a subfolder called ", samples, " in the current folder ", getwd())), # switch2 = answer 2
setwd(tempdir()); print(paste0("Files will be saved to a temporary folder ", getwd()))) # switch3 = answer2
switch(menu(choices = c("YES, as a subfolder within my current working directory", # answer 1, + 1, = 2
"Yes, but to a temporary folder",
"NO"),
title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?") + 1, # answer 2, + 1, = 3
cat("Nothing done\n"), # switch1 = answer 0 + 1 = 1
print(paste0("Files will be saved to a subfolder called ", samples, " in the current folder ", getwd())), # switch2 = answer 2
{setwd(tempdir())
print(paste0("Files will be saved to a temporary folder ", getwd()))}
) # switch3 = answer2
switch(menu(choices = c("YES, as a subfolder within my current working directory", # answer 1, + 1, = 2
"Yes, but to a temporary folder",
"NO"),
title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?") + 1, # answer 2, + 1, = 3
cat("Nothing done\n"), # switch1 = answer 0 + 1 = 1
print(paste0("Files will be saved to a subfolder called ", samples, " in the current folder ", getwd())), # switch2 = answer 2
{setwd(tempdir())
print(paste0("Files will be saved to a temporary folder ", getwd()))}
) # switch3 = answer2
switch(menu(choices = c("YES, as a subfolder within my current working directory", # answer 1, + 1, = 2
"Yes, but to a temporary folder",
"NO"),
title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?") + 1, # answer 2, + 1, = 3
cat("Nothing done\n"), # switch1 = answer 0 + 1 = 1
print(paste0("Files will be saved to a subfolder called ", samples, " in the current folder ", getwd())), # switch2 = answer 2
{setwd(tempdir())
print(paste0("Files will be saved to a temporary folder ", getwd()))}
) # switch3 = answer2
switch(menu(choices = c("YES, as a subfolder within my current working directory", # answer 1, + 1, = 2
"Yes, but to a temporary folder",
"NO"),
title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?") + 1, # answer 2, + 1, = 3
cat("Nothing done\n"), # switch1 = answer 0 + 1 = 1
print(paste0("Files will be saved to a subfolder called ", samples, " in the current folder ", getwd())), # switch2 = answer 2
{setwd(tempdir())
print(paste0("Files will be saved to a temporary folder ", getwd()))}
) # switch3 = answer2
switch(menu(choices = c("YES, as a subfolder within my current working directory", # answer 1, + 1, = 2
"Yes, but to a temporary folder",
"NO"),
title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?") + 1, # answer 2, + 1, = 3
cat("Nothing done\n"), # switch1 = answer 0 + 1 = 1
print(paste0("Files will be saved to a subfolder called ", samples, " in the current folder ", getwd())), # switch2 = answer 2
{setwd(tempdir())
print(paste0("Files will be saved to a temporary folder"))}
) # switch3 = answer2
switch(menu(choices = c("YES, as a subfolder within my current working directory", # answer 1, + 1, = 2
"Yes, but to a temporary folder",
"NO"),
title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?") + 1, # answer 2, + 1, = 3
cat("Nothing done\n"), # switch1 = answer 0 + 1 = 1
print(paste0("Files will be saved to a subfolder called ", samples, " in the current folder ", getwd())), # switch2 = answer 2
{setwd(tempdir())
print(paste0("Files will be saved to a temporary folder"))}
) # switch3 = answer2
switch(menu(choices = c("YES, as a subfolder within my current working directory", # answer 1, + 1, = 2
"Yes, but to a temporary folder",
"NO"),
title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?") + 1, # answer 2, + 1, = 3
cat("Nothing done\n"), # switch1 = answer 0 + 1 = 1
print(paste0("Files will be saved to a subfolder called ", names(samples[i]), " in the current folder ", getwd())), # switch2 = answer 2
{setwd(tempdir()) # switch3 = answer2
print("Files will be saved to a temporary folder")},
print("Nothing will be saved") # switch4 = answer 3, NO
)
switch(menu(choices = c("YES, as a subfolder within my current working directory", # answer 1, + 1, = 2
"Yes, but to a temporary folder",
"NO"),
title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?") + 1, # answer 2, + 1, = 3
cat("Nothing done\n"), # switch1 = answer 0 + 1 = 1
print(paste0("Files will be saved to a subfolder called ", names(samples[i]), " in the current folder ", getwd())), # switch2 = answer 2
{setwd(tempdir()) # switch3 = answer2
print("Files will be saved to a temporary folder")},
print("Nothing will be saved") # switch4 = answer 3, NO
)
switch(menu(choices = c("YES, as a subfolder within my current working directory", # answer 1, + 1, = 2
"Yes, but to a temporary folder",
"NO"),
title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?") + 1, # answer 2, + 1, = 3
cat("Nothing done\n"), # switch1 = answer 0 + 1 = 1
print(paste0("Files will be saved to a subfolder called ", names(samples[i]), " in the current folder ", getwd())), # switch2 = answer 2
{setwd(tempdir()) # switch3 = answer2
print("Files will be saved to a temporary folder")},
print("Nothing will be saved") # switch4 = answer 3, NO
)
switch(menu(choices = c("YES, as a subfolder within my current working directory", # answer 1, + 1, = 2
"Yes, but to a temporary folder",
"NO"),
title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?") + 1, # answer 2, + 1, = 3
cat("Nothing done\n"), # switch1 = answer 0 + 1 = 1
print(paste0("Files will be saved to a subfolder called ", names(samples[i]), " in the current folder ", getwd())), # switch2 = answer 2
{setwd(tempdir()) # switch3 = answer2
print("Files will be saved to a temporary folder")},
print("Nothing will be saved") # switch4 = answer 3, NO
)
switch(menu(title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?",
choices = c("YES, as a subfolder within my current working directory", # answer1, + 1, = 2
"Yes, but to a temporary folder", # answer2, + 1, = 3
"NO")) + 1,  # answer3, + 1, = 4
cat("Nothing done\n"), # switch1 = answer0 + 1 = 1
print(paste0("Files will be saved to a subfolder named per your response variable(s), in the current folder ", getwd())), # switch2 = answer1
{setwd(tempdir()) # switch3 = answer2
print("Files will be saved to a temporary folder")},
print("Nothing will be saved") # switch4 = answer3
)
switch(menu(title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?",
choices = c("YES, as a subfolder within my current working directory", # answer1, + 1, = 2
"Yes, but to a temporary folder", # answer2, + 1, = 3
"NO")) + 1,  # answer3, + 1, = 4
cat("Nothing done\n"), # switch1 = answer0 + 1 = 1
print(paste0("Files will be saved to a subfolder named per your response variable(s), in the current folder ", getwd())), # switch2 = answer1
{setwd(tempdir()) # switch3 = answer2
print("Files will be saved to a temporary folder")},
print("Nothing will be saved") # switch4 = answer3
)
switch(menu(title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?",
choices = c("YES, as a subfolder within my current working directory", # answer1, + 1, = 2
"Yes, but to a temporary folder", # answer2, + 1, = 3
"NO")) + 1,  # answer3, + 1, = 4
cat("Nothing done\n"), # switch1 = answer0 + 1 = 1
print(paste0("Files will be saved to a subfolder named per your response variable(s), in the current folder ", getwd())), # switch2 = answer1
{setwd(tempdir()) # switch3 = answer2
print("Files will be saved to a temporary folder")},
print("Nothing will be saved") # switch4 = answer3
)
switch(menu(title = "Save resulting csv report, map & plot image files, and model objects (if so requested), to user's local filesystem?",
choices = c("YES, as a subfolder within my current working directory", # answer1, + 1, = 2
"Yes, but to a temporary folder", # answer2, + 1, = 3
"NO")) + 1,  # answer3, + 1, = 4
cat("Nothing done\n"), # switch1 = answer0 + 1 = 1
print(paste0("Files will be saved to a subfolder named per your response variable(s), in the current folder ", getwd())), # switch2 = answer1
{setwd(tempdir()) # switch3 = answer2
print("Files will be saved to a temporary folder")},
print("Nothing will be saved") # switch4 = answer3
)
library(*devtools)
library(devtools)
document()
install.packages("dismo")
install.packages("gbm")
document()
build()
getwd()
savedir = tempdir()
setwd(savedir)
getwd()
document()
