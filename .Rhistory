if (any(ok))
lines(stats::lowess(x[ok], y[ok], f = span, iter = iter), lwd = 2.5, col = col.smooth, ...)
}
panel.hist <- function(x, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "black", ...)
}
# Error in plot.new() : figure margins too large
# too many variables. Split into sections
#
pairs(Annual[c(14:17,20,22:23)], #large enviro indices THESE WILL BE WRONG IF CSV CHANGES
lower.panel = panel.lm,
upper.panel = panel.cor,
diag.panel = panel.hist,
main = "pair plots of variables",
cex.labels = 10)
pairs(Annual[c(14:17,20,22:23)], #large enviro indices THESE WILL BE WRONG IF CSV CHANGES
lower.panel = panel.lm,
upper.panel = panel.cor,
diag.panel = panel.hist,
main = "pair plots of variables",
cex.labels = 2)
pairs(Annual[c(14:17,20,22:23)], #large enviro indices THESE WILL BE WRONG IF CSV CHANGES
lower.panel = panel.lm,
upper.panel = panel.cor,
diag.panel = panel.hist,
main = "pair plots of variables",
cex.labels = 1.5)
pairs(Annual[c(14:17,20,22:23)],
lower.panel = panel.lm,
upper.panel = panel.cor,
diag.panel = panel.hist,
main = "pair plots of variables",
cex.labels = 1.5) #changes diagonal labels size, default 1
pairs(Annual[c(14:17,20,22:23)],
lower.panel = panel.smooth,
upper.panel = panel.cor,
diag.panel = panel.hist,
main = "pair plots of variables",
cex.labels = 1.5) #changes diagonal labels size, default 1
# can also ditch the data argument and call column ranges with the data table e.g.
pairs(Annual[c(14:17,20,22:23)],
lower.panel = panel.lm,
upper.panel = panel.cor,
diag.panel = panel.hist,
main = "pair plots of variables",
cex.labels = 1.5) #changes diagonal labels size, default 1
pairs(Annual[c(14:17,20,22:23)],
lower.panel = panel.smooth,
upper.panel = panel.cor,
diag.panel = panel.hist,
main = "pair plots of variables",
cex.labels = 1.5) #changes diagonal labels size, default 1
#Install packages####
# install.packages("devtools")
library(devtools)
library(gbm.auto)
# which machine are you on?
machine <- "/home" # linux desktop (& laptop?)
##1 Import, clean, set variables####
# read in csv created from Data Structure Template excel
Annual <- read.csv(paste0(machine, '/simon/Dropbox/Farallon Institute/Data & Analysis/Data Structure Template 2018.08.06.csv'),
na.strings = "")
AdultResvar <- "A_Tot_B"
AdultExpvars <- c("A_Tot_B_Y.1", "MEI_PreW", "MEI_Spring", "NPGO_PreW",
"NPGO_Spring","NPC_Str_Lat", "SeaLevLA_PreW","SeaLevLA_Spring",
"Ek_PreW_46025","Ek_Spr_46025", "Ek_PreW_46011","Ek_Spr_46011",
"Ek_PreW_46012", "Ek_Spr_46012","FourDCP_PreW_46025","FourDCP_Spr_46025",
"FourDCP_PreW_46011","FourDCP_Spr_46011","FourDCP_PreW_46012",
"FourDCP_Spr_46012","CrsWnd_PreW_46025","CrsWnd_Spr_46025",
"CrsWnd_PreW_46011","CrsWnd_Spr_46011","CrsWnd_PreW_46012",
"CrsWnd_Spr_46012","BUI33N_PreW","BUI33N_Spring","Stability_all",
"Stability_nearshore", "PDO_PreW",
"PDO_Spring","LaJ_T_PreW","LaJ_T_Spring","TempAtDep_all",
"TempAtDep_nearshore", "SalAtDep_all", "SalAtDep_nearshore",
"ChlA_all", "ChlA_nearshore","Sml_P", "Euphausiids",
"Hake", "C_SeaLion","C_Albacore","C_Halibut","C_Murre",
"C_SoShWa","C_HBW","C_Hsquid", "FishLand","MktSqdCatch",
"Catch_Sard","Biom_Sard_Alec")
LarvalResvar <- "Anch_Larvae"
LarvalExpvars <- c("Anch_Egg", "A_Tot_B", "MEI_PreW", "MEI_Spring", "NPGO_PreW",
"NPGO_Spring","NPC_Str_Lat", "SeaLevLA_PreW","SeaLevLA_Spring",
"Ek_PreW_46025","Ek_Spr_46025", "Ek_PreW_46011","Ek_Spr_46011",
"Ek_PreW_46012", "Ek_Spr_46012","FourDCP_PreW_46025","FourDCP_Spr_46025",
"FourDCP_PreW_46011","FourDCP_Spr_46011","FourDCP_PreW_46012",
"FourDCP_Spr_46012","CrsWnd_PreW_46025","CrsWnd_Spr_46025",
"CrsWnd_PreW_46011","CrsWnd_Spr_46011","CrsWnd_PreW_46012",
"CrsWnd_Spr_46012","BUI33N_PreW","BUI33N_Spring","Stability_all",
"Stability_nearshore", "PDO_PreW",
"PDO_Spring","LaJ_T_PreW","LaJ_T_Spring","TempAtDep_all",
"TempAtDep_nearshore", "SalAtDep_all", "SalAtDep_nearshore",
"ChlA_all", "ChlA_nearshore","Sml_P", "Lrg_P",
"Hake", "Jmac", "Cmac", "Catch_Sard","Biom_Sard_Alec")
EggResvar <- "Anch_Egg"
EggExpvars <- c("A_Tot_B", "MEI_PreW", "MEI_Spring", "NPGO_PreW",
"NPGO_Spring","NPC_Str_Lat", "SeaLevLA_PreW","SeaLevLA_Spring",
"Ek_PreW_46025","Ek_Spr_46025", "Ek_PreW_46011","Ek_Spr_46011",
"Ek_PreW_46012", "Ek_Spr_46012","FourDCP_PreW_46025","FourDCP_Spr_46025",
"FourDCP_PreW_46011","FourDCP_Spr_46011","FourDCP_PreW_46012",
"FourDCP_Spr_46012","CrsWnd_PreW_46025","CrsWnd_Spr_46025",
"CrsWnd_PreW_46011","CrsWnd_Spr_46011","CrsWnd_PreW_46012",
"CrsWnd_Spr_46012","BUI33N_PreW","BUI33N_Spring","Stability_all",
"Stability_nearshore", "PDO_PreW",
"PDO_Spring","LaJ_T_PreW","LaJ_T_Spring","TempAtDep_all",
"TempAtDep_nearshore", "SalAtDep_all", "SalAtDep_nearshore",
"Lrg_P", "Hake", "Jmac", "Cmac", "Catch_Sard","Biom_Sard_Alec")
AdultResvarCol <- match(AdultResvar, names(Annual))
AdultExpvarsCols <- match(AdultExpvars, names(Annual))
LarvalResvarCol <- match(LarvalResvar, names(Annual))
LarvalExpvarsCols <- match(LarvalExpvars, names(Annual))
EggResvarCol <- match(EggResvar, names(Annual))
EggExpvarsCols <- match(EggExpvars, names(Annual))
# remove NA rows
AdultSamples <- Annual[-which(is.na(Annual[AdultResvar])),]
LarvalSamples <- Annual[-which(is.na(Annual[LarvalResvar])),]
EggSamples <- Annual[-which(is.na(Annual[EggResvar])),]
#2 Run code####
setwd(paste0(machine, "/simon/Dropbox/Farallon Institute/Data & Analysis/ModelOutputs/"))
#2.1 Adults####
# dir.create("Adults")
setwd("Adults")
AdultResvar <- "A_Tot_B"
AdultExpvars <- c("A_Tot_B_Y.1", "MEI_Spring","NPGO_Spring","NPC_Str_Lat",
"SeaLevLA_Spring", "Ek_Spr_46025","FourDCP_Spr_46025",
"CrsWnd_Spr_46025","BUI33N_Spring",
"Stability_nearshore", "TempAtDep_nearshore", "SalAtDep_nearshore",
"ChlA_nearshore","Sml_P", "Euphausiids",
"Hake", "C_SeaLion","C_Albacore","C_Halibut","C_Murre",
"C_SoShWa","C_HBW","C_Hsquid", "FishLand","MktSqdCatch",
"Biom_Sard_Alec","Krill_Biom")
#3.2 larvae####
LarvalResvar <- "Anch_Larvae"
LarvalExpvars <- c("Anch_Egg", "A_Tot_B", "MEI_Spring",
"NPGO_Spring","NPC_Str_Lat","SeaLevLA_Spring",
"Ek_Spr_46025","FourDCP_Spr_46025","CrsWnd_PreW_46025","BUI33N_Spring",
"Stability_nearshore", "TempAtDep_nearshore", "SalAtDep_nearshore",
"ChlA_nearshore","Sml_P", "Lrg_P",
"Hake", "Jmac", "Cmac", "Biom_Sard_Alec","Krill_Biom")
#3.3 eggs####
EggResvar <- "Anch_Egg"
EggExpvars <- c("A_Tot_B", "MEI_Spring",
"NPGO_Spring","NPC_Str_Lat","SeaLevLA_Spring",
"Ek_Spr_46025", "FourDCP_Spr_46025","CrsWnd_Spr_46025",
"BUI33N_Spring",
"Stability_nearshore",
"TempAtDep_nearshore", "SalAtDep_nearshore",
"Lrg_P", "Hake", "Jmac", "Cmac", "Biom_Sard_Alec","Krill_Biom")
AdultResvarCol <- match(AdultResvar, names(Annual))
AdultExpvarsCols <- match(AdultExpvars, names(Annual))
LarvalResvarCol <- match(LarvalResvar, names(Annual))
LarvalExpvarsCols <- match(LarvalExpvars, names(Annual))
EggResvarCol <- match(EggResvar, names(Annual))
EggExpvarsCols <- match(EggExpvars, names(Annual))
# remove NA rows
AdultSamples <- Annual[-which(is.na(Annual[AdultResvar])),]
LarvalSamples <- Annual[-which(is.na(Annual[LarvalResvar])),]
EggSamples <- Annual[-which(is.na(Annual[EggResvar])),]
#4.1 Adults####
# dir.create("AdultsTrim")
setwd("AdultsTrim")
#4 ReRun code w fewer vars####
setwd(paste0(machine, "/simon/Dropbox/Farallon Institute/Data & Analysis/ModelOutputs/"))
#4.1 Adults####
# dir.create("AdultsTrim")
setwd("AdultsTrim")
gbm.auto(expvar = AdultExpvarsCols,
resvar = AdultResvarCol,
samples = AdultSamples,
lr = c(0.001),
ZI = F,
fam1 = "gaussian",
savegbm = FALSE,
BnW = FALSE,
simp = T,
multiplot = F,
varint = F)
gbm.auto(expvar = AdultExpvarsCols,
resvar = AdultResvarCol,
samples = AdultSamples,
lr = c(0.000001),
ZI = F,
fam1 = "gaussian",
savegbm = FALSE,
BnW = FALSE,
simp = T,
multiplot = F,
varint = F)
gbm.auto(expvar = AdultExpvarsCols,
resvar = AdultResvarCol,
samples = AdultSamples,
lr = c(0.000001),
ZI = F,
# fam1 = "gaussian",
savegbm = FALSE,
BnW = FALSE,
simp = T,
multiplot = F,
varint = F)
gbm.auto(expvar = AdultExpvarsCols,
resvar = AdultResvarCol,
samples = AdultSamples,
lr = c(0.000001),
ZI = F,
# fam1 = "gaussian",
savegbm = FALSE,
BnW = FALSE,
simp = T,
multiplot = F,
varint = F,
n.trees = 10)
adultpossamples <- AdultSamples[(AdultSamples[,AdultResvarCol] > 0),AdultResvarCol]
# 57 pos samples
# variance?
var(AdultSamples$A_Tot_B)
# John & Simon's data formatting script 26.1.2017
#Code Prep----
#SetWD load install library====
setwd("/home/simon/Dropbox/PostDoc Work/Drymon Froeschke transect BRT/")
disl <- read.csv("disl.csv")
View(disl)
# John & Simon's data formatting script 26.1.2017
#Code Prep----
#SetWD load install library====
setwd("/home/simon/Dropbox/PostDoc Work/Drymon Froeschke transect BRT/")
disl <- read.csv("disl.csv")
# install.packages("reshape2")
# install.packages("doBy")
# install.packages("plyr")
# install.packages("dplyr")
# install.packages("missForest")
# install.packages("suncalc")
# install.packages("devtools")
# install.packages("survival") #shouldn't need to do this but gbm.auto install
# says it needs it which I don't think it should.
# install.packages("foreign") # ditto
library(reshape2)
library(doBy)
library(plyr)
library(dplyr)
library(missForest)
library(suncalc)
library(devtools)
library(gbm.auto)
#Errorfix valueadd wide====
# order season factors
disl$Season <- factor(disl$Season,
levels = c("Winter", "Spring", "Summer", "Fall"),
ordered = TRUE)
# Depth Bin: factor 3 levels reorder 'deep mid shallow' to 's m d'
disl$Depth.Bin <- factor(disl$Depth.Bin,
levels = c("Shallow", "Mid", "Deep"),
ordered = TRUE)
#Fix cuban.dogfish Female was coded instead of F
disl <- rename(disl, F.Cuban.dogfish = Female.Cuban.dogfish)
## make sure the non-numeric are treated correctly
char.ids <- unlist(lapply(disl,is.character))
disl[,char.ids] <- lapply(disl[,char.ids],as.factor)
#Impute missing values with random forest
missF <- missForest(disl[,6:11])
missFimp <- missF$ximp
disl2 <- cbind(disl[,1:5], missFimp[,1:6])
## Generate daylength
# acquire date from station.id
datevec <- paste0(paste0(20, substr(disl2$Station.ID, 7, 8)), "-",
substr(disl2$Station.ID, 3, 4), "-",
substr(disl2$Station.ID, 5, 6))
class(datevec) #character
datevec <- as.Date(datevec) # change to date format
class(datevec) #date
# get sunrise & sunset times for those latlons & dates
sundata <- data.frame(date = datevec,
lat = disl2$Lat,
lon = disl2$Lon)
sunriseset <- getSunlightTimes(data = sundata,
keep = c("sunrise", "sunset"),
tz = "America/Chicago")
#calc day length: sunset minus sunrise
daylength <- sunriseset$sunset - sunriseset$sunrise
class(daylength) #difftime
daylength <- as.numeric(daylength) #change to numeric format
class(daylength) #numeric
disl2 <- cbind(disl2, daylength) #add to dataframe
#update original disl with fixed/edited & new values
disl3 <- cbind(disl2, disl[,12:42])
#make bin values
disl_tmp <- as.matrix(disl3[,13:43])
disl3bin <- data.frame(ifelse(disl_tmp > 0, 1, disl_tmp))
##Long format====
##Sex-as-factors df
#Convert from wide to long
dislL <- melt(disl3, id = c("Year", "Season", "Station.ID", "Lon", "Lat",
"Surface.T", "Bottom.T", "Surface.DO", "Bottom.DO",
"Start.Depth", "Depth.Bin", "daylength"))
#make sex vector
dislL$sex <- substr(as.character(dislL$variable),1,1)
dislL$sex <- as.factor(dislL$sex)
#make species name vector
dislL$species <- substr(as.character(dislL$variable), 3, nchar(as.character(dislL$variable)))
dislL$species <- as.factor(dislL$species)
# add binomial values vector
dislL$valuebin <- as.integer(ifelse(dislL$value > 0, 1, 0))
##Species only; Sex pooled #variable (irrelevant is species) sex & binomial lost
disl.nosex <- summaryBy(value ~ species + Year + Season + Station.ID + Lon + Lat,
data = dislL, FUN = c(sum),
id = c("Surface.T","Bottom.T", "Surface.DO", "Bottom.DO",
"Start.Depth", "Depth.Bin", "daylength"))
#Sexpooled wide====
#cast back to wide, combined sexes.
dislWide <- dcast(disl.nosex, Year + Season  + Station.ID + Lon + Lat +
Surface.T + Bottom.T + Surface.DO + Bottom.DO +
Start.Depth + Depth.Bin + daylength ~
species, value.var = "value.sum")
## Transform to presence abscence
dislWide_tmp <- as.matrix(dislWide[13:30])
dislWidebin <- data.frame(ifelse(dislWide_tmp > 0, 1, dislWide_tmp))
# Remove expvars now they've been used for wide-long-wide transform
disl3 <- disl3[13:43]
dislWide <- dislWide[13:30]
# subset resvars w >10 positive values
posSamples <- colSums(disl3bin)
posSamplesSub <- posSamples > 10
disl3sub <- disl3[posSamplesSub]
posSamples <- colSums(dislWidebin)
posSamplesSub <- posSamples > 10
dislWidesub <- dislWide[posSamplesSub]
#jump to here####
setwd("/home/simon/Dropbox/PostDoc Work/Drymon Froeschke transect BRT/")
#jump to here####
setwd("/home/simon/Dropbox/PostDoc Work/Drymon Froeschke transect BRT/")
# pooled in excel
disl3pool <- read.csv("disl3pool.csv")
posSamples <- colSums(disl3pool)
posSamplesSub <- posSamples > 10
dislWidesub <- disl3pool[posSamplesSub]
disl3 <- read.csv("disl3.csv")
# remove temp & unneeded objects
rm(list = c("disl", "disl_tmp", "dislWide_tmp", "missF", "missFimp", "sundata", "sunriseset", "char.ids", "datevec", "daylength", "posSamples", "posSamplesSub"))
View(disl3)
View(disl3pool)
disl <- read.csv("disl.csv")
disl$Season <- factor(disl$Season,
levels = c("Winter", "Spring", "Summer", "Fall"),
ordered = TRUE)
# Depth Bin: factor 3 levels reorder 'deep mid shallow' to 's m d'
disl$Depth.Bin <- factor(disl$Depth.Bin,
levels = c("Shallow", "Mid", "Deep"),
ordered = TRUE)
#Fix cuban.dogfish Female was coded instead of F
disl <- rename(disl, F.Cuban.dogfish = Female.Cuban.dogfish)
## make sure the non-numeric are treated correctly
char.ids <- unlist(lapply(disl,is.character))
disl[,char.ids] <- lapply(disl[,char.ids],as.factor)
#Impute missing values with random forest
missF <- missForest(disl[,6:11])
missFimp <- missF$ximp
disl2 <- cbind(disl[,1:5], missFimp[,1:6])
## Generate daylength
# acquire date from station.id
datevec <- paste0(paste0(20, substr(disl2$Station.ID, 7, 8)), "-",
substr(disl2$Station.ID, 3, 4), "-",
substr(disl2$Station.ID, 5, 6))
class(datevec) #character
datevec <- as.Date(datevec) # change to date format
class(datevec) #date
# get sunrise & sunset times for those latlons & dates
sundata <- data.frame(date = datevec,
lat = disl2$Lat,
lon = disl2$Lon)
sunriseset <- getSunlightTimes(data = sundata,
keep = c("sunrise", "sunset"),
tz = "America/Chicago")
#calc day length: sunset minus sunrise
daylength <- sunriseset$sunset - sunriseset$sunrise
class(daylength) #difftime
daylength <- as.numeric(daylength) #change to numeric format
class(daylength) #numeric
disl2 <- cbind(disl2, daylength) #add to dataframe
#update original disl with fixed/edited & new values
disl3 <- cbind(disl2, disl[,12:42])
#make bin values
disl_tmp <- as.matrix(disl3[,13:43])
disl3bin <- data.frame(ifelse(disl_tmp > 0, 1, disl_tmp))
##Long format====
##Sex-as-factors df
#Convert from wide to long
dislL <- melt(disl3, id = c("Year", "Season", "Station.ID", "Lon", "Lat",
"Surface.T", "Bottom.T", "Surface.DO", "Bottom.DO",
"Start.Depth", "Depth.Bin", "daylength"))
#make sex vector
dislL$sex <- substr(as.character(dislL$variable),1,1)
dislL$sex <- as.factor(dislL$sex)
#make species name vector
dislL$species <- substr(as.character(dislL$variable), 3, nchar(as.character(dislL$variable)))
dislL$species <- as.factor(dislL$species)
# add binomial values vector
dislL$valuebin <- as.integer(ifelse(dislL$value > 0, 1, 0))
##Species only; Sex pooled #variable (irrelevant is species) sex & binomial lost
disl.nosex <- summaryBy(value ~ species + Year + Season + Station.ID + Lon + Lat,
data = dislL, FUN = c(sum),
id = c("Surface.T","Bottom.T", "Surface.DO", "Bottom.DO",
"Start.Depth", "Depth.Bin", "daylength"))
#Sexpooled wide====
#cast back to wide, combined sexes.
dislWide <- dcast(disl.nosex, Year + Season  + Station.ID + Lon + Lat +
Surface.T + Bottom.T + Surface.DO + Bottom.DO +
Start.Depth + Depth.Bin + daylength ~
species, value.var = "value.sum")
## Transform to presence abscence
dislWide_tmp <- as.matrix(dislWide[13:30])
dislWidebin <- data.frame(ifelse(dislWide_tmp > 0, 1, dislWide_tmp))
# Remove expvars now they've been used for wide-long-wide transform
disl3 <- disl3[13:43]
dislWide <- dislWide[13:30]
# subset resvars w >10 positive values
posSamples <- colSums(disl3bin)
posSamplesSub <- posSamples > 10
disl3sub <- disl3[posSamplesSub]
posSamples <- colSums(dislWidebin)
posSamplesSub <- posSamples > 10
dislWidesub <- dislWide[posSamplesSub]
#jump to here####
setwd("/home/simon/Dropbox/PostDoc Work/Drymon Froeschke transect BRT/")
disl3 <- read.csv("disl3.csv")
# THIS IS POSSIBLY BROKEN
# add M & F manually from disl3sub. Pool in excel
write.csv(disl3, file = "disl3.csv")
# pooled in excel
disl3pool <- read.csv("disl3pool.csv")
posSamples <- colSums(disl3pool)
posSamplesSub <- posSamples > 10
dislWidesub <- disl3pool[posSamplesSub]
# 1 more expvar (finetooth), rows align with original rows in disl3 therefore with expvars.
# column order is original not alphabetical
# remove temp & unneeded objects
rm(list = c("disl", "disl_tmp", "dislWide_tmp", "missF", "missFimp", "sundata", "sunriseset", "char.ids", "datevec", "daylength", "posSamples", "posSamplesSub"))
View(disl3)
View(disl2)
colnames(disl2)
#ranges
for(i in colnames(disl2)){
range(disl2[i])
}
#ranges
for(i in colnames(disl2)){
range(disl2[get(i)])
}
#ranges
for(i in colnames(disl2)){
range(disl2[,i])
}
disl2[,Year]
disl2[,"Year"]
disl2[Year]
#ranges
for(i in colnames(disl2)){
range(disl2[,as.character(i)])
}
disl2[as.chaaracter(Year)]
disl2[as.character(Year)]
}
#ranges
for(i in 1:length(colnames(disl2))){
range(disl2[,i])
}
#ranges
for(i in 1:c(1,4:10,12)){
range(disl2[,i])
}
c(1,4:10,12)
#ranges
for(i in 1 : (c(1,4:10,12))){
range(disl2[,i])
}
range(disl2[,1])
#ranges
for(i in 1 : (c(1,4:10,12))){
print(i)
#range(disl2[,i])
}
(c(1,4:10,12))
for(i in 1:10){
print(i)
}
#ranges
for(i in c(1,4:10,12)){
range(disl2[,i])
}
#ranges
for(i in c(1,4:10,12)){print(range(disl2[,i]))}
#ranges
for(i in c(1,4:10,12)){
print(colnames(disl2)[i])
print(range(disl2[,i]))
}
# John & Simon's data formatting script 26.1.2017
#Code Prep----
#SetWD load install library====
setwd("/home/simon/Dropbox/PostDoc Work/Drymon Froeschke transect BRT/")
disl <- read.csv("disl.csv")
disl2["Station.ID"]
110852.4248*0.083
110852.4248/25
colnames(Report)[1]
colnames(Report)[2]
paste0("loop", i)
debugSource('C:/Users/simon/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.loop.R')
source('C:/Users/simon/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.loop.R')
